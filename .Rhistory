geom_histogram(stat = "count") +
facet_wrap(~ pelicula)
# numero de actores por película
sw_dt1 %>% group_by(pelicula) %>% tally()
# numero de actores por película
sw_dt1 %>% group_by(pelicula) %>% tally()
# peso de los actores en cada pelicula
pesosxfilm<-aggregate(peso ~ pelicula, sw_dt1, mean)
pesosxfilm
# Plot the heights, faceted by film title
ggplot(sw_dt1, aes(x = peso)) +
geom_histogram(stat = "count") +
facet_wrap(~ pelicula)
#añado las pelis en las que aparece cada actor
dt<-dt %>% add_count(actor) %>% filter(n>2)
#add_tally()
ggplot(dt, aes(x = actor,fill = peli)) +
geom_histogram(stat = "count",alpha = 0.6)+
labs(x = 'actor', y = 'nº peliculas') +
labs(title='Star Wars actores por pelicula')+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
blogdown:::serve_site()
ggplot(data = map_df(gh_users,~data_frame(
public_repos=.x[["public_repos"]],
followers= .x[["followers"]])),
aes(x = public_repos, y = followers))+
geom_col()
public_repos=.x[["public_repos"]],
followers= .x[["followers"]])),
aes(x = public_repos, y = followers))+
geom_point(aes(size=followers))
public_repos=.x[["public_repos"]],
followers= .x[["followers"]])),
aes(x = public_repos, y = followers,
size=followers))+
geom_point()
public_repos=.x[["public_repos"]],
followers= .x[["followers"]])),
aes(x = public_repos, y = followers,
size=followers))+
geom_point(mapping=aes(size = followers))
public_repos=.x[["public_repos"]],
followers= .x[["followers"]])),
aes(x = public_repos, y = followers))+
geom_point(mapping=aes(size = followers))
ggplot(data = map_df(gh_users,~data_frame(
public_repos=.x[["public_repos"]],
followers= .x[["followers"]])),
aes(x = public_repos, y = followers))+
geom_point(mapping=aes(size = followers))
map_df(gh_users,~data_frame(
public_repos=.x[["public_repos"]],
followers= .x[["followers"]]))
#  2. ¿Cuál de los usuarios tiene más repositorios públicos?
map_int(gh_users, ~.[["public_repos"]]) %>%
set_names(map_chr(gh_users, "name")) %>%
sort()
ggplot(data = map_df(gh_users,~data_frame(
public_repos=.x[["public_repos"]],
followers= .x[["followers"]],
nombre= .x[["name"]])),
aes(x = nombre, y = followers))+
geom_col(mapping=aes(fill = public_repos))
ggplot(data = map_df(gh_users,~data_frame(
public_repos=.x[["public_repos"]],
followers= .x[["followers"]],
nombre= .x[["name"]])),
aes(x = nombre, y = public_repos))+
geom_col(mapping=aes(fill = followers))
public_repos=.x[["public_repos"]],
followers= .x[["followers"]],
nombre= .x[["name"]])),
aes(x = public_repos, y = followers))+
geom_point(mapping=aes(color = nombre))
ggplot(data = map_df(gh_users,~data_frame(
public_repos=.x[["public_repos"]],
followers= .x[["followers"]],
nombre= .x[["name"]])),
aes(x = public_repos, y = followers))+
geom_point(mapping=aes(color = nombre))
ggplot(data = map_df(gh_users,~data_frame(
public_repos=.x[["public_repos"]],
followers= .x[["followers"]],
nombre= .x[["name"]])),
aes(x = public_repos, y = followers))+
geom_point(mapping=aes(color = nombre, size=7))
ggplot(data = map_df(gh_users,~data_frame(
public_repos=.x[["public_repos"]],
followers= .x[["followers"]],
nombre= .x[["name"]])),
aes(x = public_repos, y = followers,size=7))+
geom_point(mapping=aes(color = nombre))
followers = .x[["followers"]],
ggplot(data = map_df(gh_users, ~data_frame(
public_repos =.x[["public_repos"]],
followers = .x[["followers"]],
nombre  = .x[["name"]])),
aes(x = public_repos, y = followers))+
geom_point(mapping=aes(color = nombre)
public_repos =.x[["public_repos"]],
followers = .x[["followers"]],
nombre  = .x[["name"]])),
aes(x = public_repos, y = followers))+
geom_point(mapping=aes(color = nombre))
ggplot(data = map_df(gh_users, ~data_frame(
public_repos =.x[["public_repos"]],
followers = .x[["followers"]],
nombre  = .x[["name"]])),
aes(x = public_repos, y = followers))+
geom_point(mapping=aes(color = nombre))
ggplot(data = map_df(gh_users, ~data_frame(
public_repos =.x[["public_repos"]],
followers = .x[["followers"]],
nombre  = .x[["name"]])),
aes(x = public_repos, y = followers,size=7))+
geom_point(mapping=aes(color = nombre))
public_repos =.x[["public_repos"]],
followers = .x[["followers"]],
nombre  = .x[["name"]])),
aes(x = public_repos, y = followers,size=followers))+
geom_point(mapping=aes(color = nombre))
ggplot(data = map_df(gh_users, ~data_frame(
public_repos =.x[["public_repos"]],
followers = .x[["followers"]],
nombre  = .x[["name"]])),
aes(x = public_repos, y = followers,size=followers))+
geom_point(mapping=aes(color = nombre))
public_repos =.x[["public_repos"]],
followers = .x[["followers"]],
nombre  = .x[["name"]])),
aes(x = public_repos, y = followers))+
geom_point(mapping=aes(color = nombre),size=7)
ggplot(data = map_df(gh_users, ~data_frame(
public_repos =.x[["public_repos"]],
followers = .x[["followers"]],
nombre  = .x[["name"]])),
aes(x = public_repos, y = followers))+
geom_point(mapping=aes(color = nombre),size=7)
ggplot(data = map_df(gh_users, ~data_frame(
public_repos =.x[["public_repos"]],
followers = .x[["followers"]],
nombre  = .x[["name"]])),
aes(x = public_repos, y = followers))+
geom_point(mapping=aes(color = nombre),size=7)+
geom_text(aes(label=nombre),hjust = 0, nudge_x = 0.05, color="blue",size=3)
public_repos =.x[["public_repos"]],
followers = .x[["followers"]],
nombre  = .x[["name"]])),
aes(x = public_repos, y = followers))+
geom_point(mapping=aes(color = nombre),size=7)+
geom_text(aes(label=nombre,color=nombre),hjust = 0, nudge_x = 0.05, ,size=3)
ggplot(data = map_df(gh_users, ~data_frame(
public_repos =.x[["public_repos"]],
followers = .x[["followers"]],
nombre  = .x[["name"]])),
aes(x = public_repos, y = followers))+
geom_point(mapping=aes(color = nombre),size=7)+
geom_text(aes(label=nombre,color=nombre),hjust = 0, nudge_x = 0.05,size=4)
ggplot(data = map_df(gh_users, ~data_frame(
public_repos =.x[["public_repos"]],
followers = .x[["followers"]],
nombre  = .x[["name"]])),
aes(x = public_repos, y = followers))+
geom_point(mapping=aes(color = nombre),size=7)+
geom_text(aes(label=nombre,color=nombre),hjust = 5, nudge_x = -5,size=4)
ggplot(data = map_df(gh_users, ~data_frame(
public_repos =.x[["public_repos"]],
followers = .x[["followers"]],
nombre  = .x[["name"]])),
aes(x = public_repos, y = followers))+
geom_point(mapping=aes(color = nombre),size=7)+
geom_text(aes(label=nombre,color=nombre),hjust = 1, nudge_x = -1,size=4)
ggplot(data = map_df(gh_users, ~data_frame(
public_repos =.x[["public_repos"]],
followers = .x[["followers"]],
nombre  = .x[["name"]])),
aes(x = public_repos, y = followers))+
geom_point(mapping=aes(color = nombre),size=7)+
geom_text(aes(label=nombre,color=nombre),
hjust = 1, nudge_x = -1,size=4)+
labs(title = 'Seguidores vs `public_repo')
ggplot(data = map_df(gh_users, ~data_frame(
public_repos =.x[["public_repos"]],
followers = .x[["followers"]],
nombre  = .x[["name"]])),
aes(x = public_repos, y = followers))+
geom_point(mapping=aes(color = nombre),size=7)+
geom_text(aes(label=nombre),
hjust = 1, nudge_x = -1,size=4)+
labs(title = 'Seguidores vs `public_repo')
library(DiagrammeR)
# arbol genealógico sencillo
DiagrammeR("graph LR;
1[sf]-->2[     sfc    ];
2-->3[    sfg    ];
2-->4[    CRS    ];
1-->5[data.frame];
3-->30(POINT)
3-->31(MULTIPOINT)
3-->32(LINESTRING)
3-->33(MULTILINESTRING)
3-->34(POLYGON)
3-->35(MULTIPOLYGON)
style 1 fill:#E5E25F;
style 2 fill:#81F7BE;
style 3 fill:#FAAC58;
style 4 fill:#FA58F4
"
)
blogdown:::serve_site()
library(DiagrammeR)
# arbol genealógico sencillo
DiagrammeR("graph LR;
1[sf]-->2[     sfc    ];
2-->3[    sfg    ];
2-->4[    CRS    ];
1-->5[data.frame];
3-->30(POINT)
3-->31(MULTIPOINT)
3-->32(LINESTRING)
3-->33(MULTILINESTRING)
3-->34(POLYGON)
3-->35(MULTIPOLYGON)
style 1 fill:#E5E25F;
style 2 fill:#81F7BE;
style 3 fill:#FAAC58;
style 4 fill:#FA58F4
"
)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
# Ejemplo de algoritmo para numeros montaña
num<-14821
# separa las cifras
separa<-strsplit(as.character(num), "")[[1]]
# lo vuelve a comvertir en numero
separa<-as.integer(separa)
separa
# calculamos diff
d_separa<-diff(separa)
d_separa
# calculamos el signo de d_separa
signo<-sign(d_separa)
signo
# calculamo la serie diff de signo
diff(signo)
# Ejemplo de algoritmo para numeros montaña
num<-1243821
# separa las cifras
separa<-strsplit(as.character(num), "")[[1]]
# lo vuelve a comvertir en numero
separa<-as.integer(separa)
separa
# calculamos diff
d_separa<-diff(separa)
d_separa
# calculamos el signo de d_separa
signo<-sign(d_separa)
signo
# calculamo la serie diff de signo
diff(signo)
montana<-function(x){
y<-strsplit(as.character(x), "")[[1]]
y<-as.integer(y)
quitaduplicados<-diff(y)
# me quedo sin cifras repetidas
y<-y[quitaduplicados!=0]
# derivada 2
y<-diff(sign(diff(y)))
suma<-sum(y)
negativos <- length(y[y<0])
si<-0L
if(suma < 0 & negativos == 1){si<-1L}
return(si)
}
# ejemplos
montana(133395551)
montana(5623)
# num montala entre 0 y 10.000
sum(map_int(0:10000,montana))
library(purrr)
library(purrr)
# num montala entre 0 y 10.000
sum(map_int(0:10000,montana))
# entre:
ale<-100:10000
# formamos un data frame con el numero y si es o no montaña
ale<-data.frame(int=ale,montana=map_int(ale,montana))
# nos quedamos solo con los montaña
solomon_ale<-ale[ale$montana==1,]
# cojemos 5 ejemplos
ejemplos<-sample(solomon_ale$int,5)
# los pinto aunque antes los transformo para poder pintarlo
# separamos las cifras
ejemplo_l<-strsplit(as.character(ejemplos), "")
a1<-map(ejemplo_l,~.x %>% as.integer())
# lo guardo como data frame para pintar
a2<- a1 %>% set_names(as.character(ejemplos)) %>% as.data.frame()
# entre:
ale<-100:10000
# formamos un data frame con el numero y si es o no montaña
ale<-data.frame(int=ale,montana=map_int(ale,montana))
# nos quedamos solo con los montaña
solomon_ale<-ale[ale$montana==1,]
# cojemos 5 ejemplos
ejemplos<-sample(solomon_ale$int,5)
# los pinto aunque antes los transformo para poder pintarlo
# separamos las cifras
ejemplo_l<-strsplit(as.character(ejemplos), "")
a1<-map(ejemplo_l,~.x %>% as.integer())
a1
# lo guardo como data frame para pintar
a2<- a1 %>% set_names(as.character(ejemplos)) %>% as.data.frame()
ejemplos
a2
#library(purrr)
library(tidyverse)
# lo guardo como data frame para pintar
a2<- a1 %>% set_names(as.character(ejemplos)) %>% as.data.frame()
a1 %>% set_names(as.character(ejemplos))
# entre:
ale<-1000:10000
# formamos un data frame con el numero y si es o no montaña
ale<-data.frame(int=ale,montana=map_int(ale,montana))
# cojemos 5 ejemplos
ejemplos<-sample(solomon_ale$int,5)
# los pinto aunque antes los transformo para poder pintarlo
# separamos las cifras
ejemplo_l<-strsplit(as.character(ejemplos), "")
a1<-map(ejemplo_l,~.x %>% as.integer())
# lo guardo como data frame para pintar
a2<- a1 %>% set_names(as.character(ejemplos)) %>% as.data.frame()
a1
# entre:
ale<-1000:10000
# formamos un data frame con el numero y si es o no montaña
ale<-data.frame(int=ale,montana=map_int(ale,montana))
ale
# nos quedamos solo con los montaña
solomon_ale<-ale[ale$montana==1,]
solomon_ale
solomon_ale
head(solomon_ale)
head(ale)
print(head(ale))
# cojemos 5 ejemplos
ejemplos<-sample(solomon_ale$int,5)
ejemplos
# los pinto aunque antes los transformo para poder pintarlo
# separamos las cifras
ejemplo_l<-strsplit(as.character(ejemplos), "")
a1<-map(ejemplo_l,~.x %>% as.integer())
# lo guardo como data frame para pintar
a2<- a1 %>% set_names(as.character(ejemplos)) %>% as.data.frame()
# pintamos
par(bg=gray(.05), oma=c(1,1,1,1), mar=c(1,1,1,1))
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,6),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
}
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,6),lty=1,lwd=7,
main="Algunos números montaña")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
}
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,6),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
}
par(bg=gray(.05), oma=c(1,1,1,1), mar=c(1,1,1,1))
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,6),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
}
blogdown:::serve_site()
# Ejemplo de algoritmo para numeros montaña
num<-1243821
separa<-strsplit(as.character(num), "")[[1]]
separa<-as.integer(separa)
d_separa<-diff(separa)
signo<-sign(d_separa)
diff(signo)
install.packages("plotrix")
max(a2[,i])
colname(a2[,i])
name(a2[,i])
colnames(a2)
colnames(a2)[2]
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(max(a2[,i]),max(a2[,i]), colnames(a2)[i], col="white",cex = 1)
}
par(bg=gray(.05), oma=c(1,1,1,1), mar=c(1,1,1,1))
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(max(a2[,i]),max(a2[,i]), colnames(a2)[i], col="white",cex = 1)
}
par(bg=gray(.05), oma=c(1,1,1,1), mar=c(1,1,1,1))
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(max(a2[,i]),max(a2[,i]), colnames(a2)[i], col="white")
}
text(max(a2[,i]),max(a2[,i]), colnames(a2)[i], col="white")
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(max(a2[,i]),max(a2[,i]), colnames(a2)[i], col="white")
}
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(max(a2[,i]),max(a2[,i]), colnames(a2)[i], col="red")
}
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(6,max(a2[,i]), colnames(a2)[i], col="red")
}
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(6,max(a2[,i]), colnames(a2)[i], col="red",cex=3)
}
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(0,max(a2[,i]), colnames(a2)[i], col="red",cex=3)
}
par(bg=gray(.05), oma=c(1,1,1,1), mar=c(1,1,1,1))
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(0,max(a2[,i]), colnames(a2)[i], col="red",cex=0.2)
}
par(bg=gray(.05), oma=c(1,1,1,1), mar=c(1,1,1,1))
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(1,max(a2[,i]), colnames(a2)[i], col="red",cex=0.3)
}
par(bg=gray(.05), oma=c(1,1,1,1), mar=c(1,1,1,1))
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
#escribimos la cifra a la izq
text(1,max(a2[,1]), colnames(a2)[1], col="red",cex=0.5)
#añadimos linea base en cero y
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(1,max(a2[,i]), colnames(a2)[i], col="red",cex=0.5)
}
par(bg=gray(.05), oma=c(1,1,1,1), mar=c(1,1,1,1))
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
#escribimos la cifra a la izq
text(1,max(a2[,1]), colnames(a2)[1], col="red",cex=0.6)
#añadimos linea base en cero y
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(1,max(a2[,i]), colnames(a2)[i], col="red",cex=0.6)
}
