mod$AIC
mod<-sarima(sunspot.year,0,1,1)
mod$AIC
# cargamos las librerías
library(astsa)
# aplico modelo
mod<-sarima(sunspot.year,8,1,0)
mod$AIC
mod<-sarima(sunspot.year,0,1,1)
mod$AIC
mod<-sarima(sunspot.year,1,1,1)
mod$AIC
mod<-sarima(sunspot.year,2,1,1)
mod<-sarima(sunspot.year,2,1,2)
mod<-sarima(sunspot.year,3,1,0)
mod<-sarima(sunspot.year,8,1,0)
mod<-sarima(sunspot.year,4,1,1)
# aplico modelo
mod<-sarima(sunspot.year,8,1,0)
adf.test(sunspot.year, alternative = "stationary")
adf.test(sunspot.year)
adf.test(sunspot.year,k=12)
# Observamos la serie temporal y correlogramas
ggtsdisplay(sunspot.year, main="manchas solares")
# cargamos las librerías
library(astsa)
library(forecast)
library(ggplot2)
# Observamos la serie temporal y correlogramas
ggtsdisplay(sunspot.year, main="manchas solares")
ggtsdisplay(diff(sunspot.year), main="diff de manchas solares")
library(tseries)
adf.test(diff(sunspot.year), alternative = "stationary")
adf.test(rnorm(200), alternative = "stationary")
adf.test(rnorm(200)+12, alternative = "stationary")
adf.test(runif(200), alternative = "stationary")
adf.test(year.gold, alternative = "stationary")
# aplico modelo con sarima()
mod<-sarima(sunspot.year,8,1,0)
mod$AIC
mod
.
# hacemos el pronostico para 10 años
sarima.for(sunspot.year, n.ahead = 12, p = 8, d = 1, q = 0)
# hacemos el pronostico para 10 años
sarima.for(sunspot.year, n.ahead = 12, p = 8, d = 1, q = 0, main="prono")
# hacemos el pronostico para 10 años
sarima.for(sunspot.year, n.ahead = 12, p = 8, d = 1, q = 0, title="prono")
# hacemos el pronostico para 10 años
sarima.for(sunspot.year, n.ahead = 12, p = 8, d = 1, q = 0)$AICc
# obtencion automática del modelo de ajuste
auto.arima(sunspot.year)
# obtencion automática del modelo de ajuste
auto.arima(sunspot.year,stepwise = TRUE)
mod_auto<-sarima(sunspot.year,2,1,3)
mod_auto$AIC
sarima(sunspot.year,2,1,3)$AICc
mod_auto<-sarima(sunspot.year,2,1,3)
mod_auto$AICc
aux<-sarima(sunspot.year,2,1,3)$AICc
aux$$AICc
aux$AICc
aux<-sarima(sunspot.year,2,1,3)$AICc
aux$AICc
mod_auto$AIC
aux$AIC
aux<-sarima(sunspot.year,2,1,3)$AICc
aux$AIC
aux<-sarima(sunspot.year,2,1,3)
aux$AIC
mod_auto<-sarima(sunspot.year,2,1,3)
mod_auto$AIC
aux<-sarima(sunspot.year,2,1,3)
aux$AIC
#mod_auto$AIC
aux<-sarima(sunspot.year,8,1,0)
aux$AIC
mod_auto$AIC
blogdown:::serve_site()
mod$AIC
mod_auto$AIC
print("modelo arima(2,1,3) AIC",  mod_auto$AIC,"modelo arima(8,1,0) AIC" mod$AIC
print("modelo arima(2,1,3) AIC",  mod_auto$AIC,"modelo arima(8,1,0) AIC" mod$AIC)
print(table("modelo arima(2,1,3) AIC",  mod_auto$AIC,"modelo arima(8,1,0) AIC" mod$AIC))
print(paste("modelo arima(2,1,3) AIC",  mod_auto$AIC,"modelo arima(8,1,0) AIC" mod$AIC))
print(paste("modelo arima(2,1,3) AIC",  mod_auto$AIC,"modelo arima(8,1,0) AIC", mod$AIC))
print(paste("modelo arima(2,1,3)AIC=",round(mod_auto$AIC,2),"modelo arima(8,1,0)AIC=", round(mod$AIC,2)))
# pintamos a efectos de ver la reducción de varianza
plot(cbind(AirPassengers,air_t), main="Comparativa serie origen y transformada Box-Cox")
tsdisplay(air_td1)
ggtsdisplay(air_td1) # =tsdisplay
acf2(air_td1)
ndiffs(air_td12)
ndiffs(diff(air_t,lag=12))
air_td12<-diff(air_t,lag=12)
tsdisplay(air_td12)
ndiffs(diff(air_t,lag=12))
ndiffs(diff(air_td12))
tsdisplay(diff(air_td12))
tsdisplay(air_td12)
tsdisplay(air_td1)
ggtsdisplay(air_td1) # =tsdisplay
tsdisplay(air_td1)
acf2(air_td1) # lo pintamos mejor
# Diferenciamos la serie lag=12 para ver estacionalidad
#air_td12<-diff(air_td1,lag=12)
air_t12<-diff(air_t,lag=12)
tsdisplay(air_t12)
ndiffs(air_t12)
nSdiffs(air_t12)
nsdiffs(air_t12)
tsdisplay(diff(air_td12))
tsdisplay(air_t12)
# Diferenciamos la serie lag=12 para ver estacionalidad
#air_td12<-diff(air_td1,lag=12)
air_t12<-diff(air_t,lag=12)
tsdisplay(diff(air_td12))
tsdisplay(diff(air_t12))
acf2(air_t12)
tsdisplay(diff(air_t12))
acf2(air_t12)
tsdisplay(air_t12)
tsdisplay(diff(air_t12))
ndiffs(diff(air_t12))
pronos<-sarima.for(air_td1, n.ahead = 24, p = 2, d = 1, q = 1,P=1,D=1,Q=1,S =12)
pronos
pronos<-sarima.for(air_td1, n.ahead = 24, p = 2, d = 1, q = 1,P=1,D=1,Q=1,S =12)
fit <- auto.arima(AirPassengers, seasonal=T,lambda="auto")
checkresiduals(fit)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
library(rvest)
url.ibex2<-"https://www.bolsamadrid.es/esp/aspx/Mercados/Precios.aspx?indice=ESI100000000"
url.ibex<-"https://www.bolsamadrid.es/esp/aspx/Mercados/Precios.aspx?indice=ESI100000000"
pag <- read_html(url.ibex) # lee la web
pag
class(pag)
tabla <- html_nodes(pag,xpath='//*[@id="ctl00_Contenido_tblAcciones"]')
class(tabla)
class(pag)
# leemos la tabla 5, con simbolo decimal la coma
tabla <- html_table(pag [[5]], dec = ",")
# lee la web entera como nodos
pag <- read_html(ruta) # lee la web
# seleccionamos la url de la web en la que haremos web scraping
url.ibex<-"https://www.bolsamadrid.es/esp/aspx/Mercados/Precios.aspx?indice=ESI100000000"
# lee la web entera como nodos
pag <- read_html(ruta) # lee la web
# lee la web entera como nodos
pag <- read_html(url.ibex) # lee la web
# leemos la tabla 5, con simbolo decimal la coma
tabla <- html_table(pag [[5]], dec = ",")
# leemos la tabla 5, con simbolo decimal la coma
tabla <- html_table(pag [[2]], dec = ",")
# leemos la tabla 5, con simbolo decimal la coma
tabla <- html_table(pag [[1]], dec = ",")
View(pag)
library(rvest)
# seleccionamos la url de la web en la que haremos web scraping
url.ibex<-"https://www.bolsamadrid.es/esp/aspx/Mercados/Precios.aspx?indice=ESI100000000"
# lee la web entera como nodos
pag <- read_html(url.ibex) # lee la web
# leemos la tabla 5, con simbolo decimal la coma
tabla <- html_table(pag [[1]], dec = ",")
# leemos la tabla 5, con simbolo decimal la coma
tabla <- html_nodes(pag, "table")
# lee la web entera como nodos
pag <- read_html(url.ibex)
# extraemos los nodos que son de tipo tabla
tabla <- html_nodes(pag, "table")
# de ellos nos quedamos con la tabla num 5
tabla <- html_table(tabla [[5]], dec = ",")
head(tabla)
blogdown:::preview_site(startup = TRUE)
install.packages("xml2")
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
install.packages("packrat")
install.packages("rsconnect")
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages("learnr")
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
library(tm)
install.packages("tm")
library(tm)
#Create a vector containing only the text
text <- data$text
# Create a corpus
docs <- Corpus(VectorSource(text))
text
docs
install.packages("wordcloud2")
# para instalar el paquete
#install.packages("wordcloud2")
library(wordcloud2)
library(tokenizers)
texto<-paste("En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga antigua, rocín flaco y galgo corredor. Una olla de algo más vaca que carnero, salpicón las más noches, duelos y quebrantos los sábados, lantejas los viernes, algún palomino de añadidura los domingos, consumían las tres partes de su hacienda. El resto della concluían sayo de velarte, calzas de velludo para las fiestas, con sus pantuflos de lo mesmo, y los días de entresemana se honraba con su vellorí de lo más fino. Tenía en su casa una ama que pasaba de los cuarenta y una sobrina que no llegaba a los veinte, y un mozo de campo y plaza que así ensillaba el rocín como tomaba la podadera. Frisaba la edad de nuestro hidalgo con los cincuenta años. Era de complexión recia, seco de carnes, enjuto de rostro, gran madrugador y amigo de la caza. Quieren decir que tenía el sobrenombre de «Quijada», o «Quesada», que en esto hay alguna diferencia en los autores que deste caso escriben, aunque por conjeturas verisímiles se deja entender que se llamaba «Quijana». Pero esto importa poco a nuestro cuento: basta que en la narración dél no se salga un punto de la verdad")
palabras <- tokenize_words(text)
texto
palabras <- tokenize_words(text)
texto<-c("En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga antigua, rocín flaco y galgo corredor. Una olla de algo más vaca que carnero, salpicón las más noches, duelos y quebrantos los sábados, lantejas los viernes, algún palomino de añadidura los domingos, consumían las tres partes de su hacienda. El resto della concluían sayo de velarte, calzas de velludo para las fiestas, con sus pantuflos de lo mesmo, y los días de entresemana se honraba con su vellorí de lo más fino. Tenía en su casa una ama que pasaba de los cuarenta y una sobrina que no llegaba a los veinte, y un mozo de campo y plaza que así ensillaba el rocín como tomaba la podadera. Frisaba la edad de nuestro hidalgo con los cincuenta años. Era de complexión recia, seco de carnes, enjuto de rostro, gran madrugador y amigo de la caza. Quieren decir que tenía el sobrenombre de «Quijada», o «Quesada», que en esto hay alguna diferencia en los autores que deste caso escriben, aunque por conjeturas verisímiles se deja entender que se llamaba «Quijana». Pero esto importa poco a nuestro cuento: basta que en la narración dél no se salga un punto de la verdad")
palabras <- tokenize_words(text)
texto
tokenize_characters(text)[[1]]
texto
wordcloud2(data = demoFreq)
head(demoFreq)
wordcloud2(demoFreq, color = "random-light", backgroundColor = "grey")
wordcloud2(demoFreq, color = "random-light", backgroundColor = "white")
texto<-"En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga antigua, rocín flaco y galgo corredor. Una olla de algo más vaca que carnero, salpicón las más noches, duelos y quebrantos los sábados, lantejas los viernes, algún palomino de añadidura los domingos, consumían las tres partes de su hacienda. El resto della concluían sayo de velarte, calzas de velludo para las fiestas, con sus pantuflos de lo mesmo, y los días de entresemana se honraba con su vellorí de lo más fino. Tenía en su casa una ama que pasaba de los cuarenta y una sobrina que no llegaba a los veinte, y un mozo de campo y plaza que así ensillaba el rocín como tomaba la podadera. Frisaba la edad de nuestro hidalgo con los cincuenta años. Era de complexión recia, seco de carnes, enjuto de rostro, gran madrugador y amigo de la caza. Quieren decir que tenía el sobrenombre de «Quijada», o «Quesada», que en esto hay alguna diferencia en los autores que deste caso escriben, aunque por conjeturas verisímiles se deja entender que se llamaba «Quijana». Pero esto importa poco a nuestro cuento: basta que en la narración dél no se salga un punto de la verdad"
palabras <- tokenize_words(text)
texto<-c("En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga antigua, rocín flaco y galgo corredor. Una olla de algo más vaca que carnero, salpicón las más noches, duelos y quebrantos los sábados, lantejas los viernes, algún palomino de añadidura los domingos, consumían las tres partes de su hacienda. El resto della concluían sayo de velarte, calzas de velludo para las fiestas, con sus pantuflos de lo mesmo, y los días de entresemana se honraba con su vellorí de lo más fino. Tenía en su casa una ama que pasaba de los cuarenta y una sobrina que no llegaba a los veinte, y un mozo de campo y plaza que así ensillaba el rocín como tomaba la podadera. Frisaba la edad de nuestro hidalgo con los cincuenta años. Era de complexión recia, seco de carnes, enjuto de rostro, gran madrugador y amigo de la caza. Quieren decir que tenía el sobrenombre de «Quijada», o «Quesada», que en esto hay alguna diferencia en los autores que deste caso escriben, aunque por conjeturas verisímiles se deja entender que se llamaba «Quijana». Pero esto importa poco a nuestro cuento: basta que en la narración dél no se salga un punto de la verdad")
palabras <- tokenize_words(text)
tokenize_characters(text)[[1]]
tokenize_characters(text)
str(texto)
palabras <- tokenize_words(texto)
palabras
tokenize_characters(text)
tab <- table(palabras[[1]])
tab
tab <- data_frame(word = names(tab), count = as.numeric(tab))
tab <- data.frame(word = names(tab), count = as.numeric(tab))
tab
tab
palabras
arrange(tab, desc(count))
tab
wordcloud2(tab, color = "random-light", backgroundColor = "white")
#vemos los datos
head(demoFreq)
tab <- data.frame(word = names(tab), freq = as.numeric(tab))
tab <- table(palabras[[1]])
tab <- data.frame(word = names(tab), freq = as.numeric(tab))
tab
#pintamos la nube de palabras con wordcloud2
wordcloud2(tab, color = "random-light", backgroundColor = "white")
wordcloud2(tab, word = "R", size = 2)
wordcloud2(tab, word = "R", size = 2)
letterCloud(tab, word = "R", size = 2)
letterCloud(tab, word = "R", size = 56)
letterCloud(tab, word = "R", size = 1)
#pintamos la nube de palabras con wordcloud2
wordcloud2(tab, color = "random-light", backgroundColor = "white")
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
# instalamos el paquete feedR
#devtools::install_github("datawookie/feedeR")
library(feedeR)
url <- "http://www.catastro.minhap.es/INSPIRE/buildings/ES.SDGC.bu.atom.xml"
# importamos los RSS con enlaces por provincias
prov_enlaces <- feed.extract(url)
# importamos los RSS con enlaces por provincias
prov_enlaces <- feed.extract(url)
str(prov_enlaces) # Veamos la estructura de datos
# Extraemos la tabla con los enlaces
prov_enlaces_tab <- as_tibble(prov_enlaces$items)  %>%
mutate(title=stringr::str_trim(title))
library(tidyverse)
# Extraemos la tabla con los enlaces
prov_enlaces_tab <- as_tibble(prov_enlaces$items)  %>%
mutate(title=stringr::str_trim(title))
head(prov_enlaces_tab)
# filtramos la provincia y obtenemos la url RSS que está en la columna link
# pull es lo mismo que $link en la data.frame
atom <- filter(prov_enlaces_tab, str_detect(title, "Murcia")) %>% pull(link)
# importamos la RSS de atom que nos da los enlaces municipales
enlaces <- feed.extract(atom) # ojo falla con UTF-8 en acentos
# vemos lo que contiene la tabla de municipios
head(enlaces$items)
# Obtenemos la tabla con los enlaces de descarga
enlaces_tab <- enlaces$items
# filtramos la tabla con el nombre de la ciudad
link <- filter(enlaces_tab, str_detect(title, "CIEZA")) %>% pull(link)
link
URLencode(link)
ruta<-"C:/R/proyectos21/ensaladilla/catastro"
dir(ruta)
dir_ls(ruta)
library(fs)  # manejo de ficheros fs
dir_ls(ruta)
dir(ruta)
dir(ruta,full.names = T)
dir_ls(ruta)
#load('radio25.RData')
edificios <- load("../../static/capas/radio25.RData")
#load('radio25.RData')
edificios <-
load("../../static/capas/radio25.RData")
#load('radio25.RData')
edificios <-   load('images/radio25.RData')
library(cowplot)
#descarga de familia tipográfica
sysfonts::font_add_google("Montserrat", "Montserrat")
#descarga de familia tipográfica
sysfonts::font_add_google("Montserrat", "Montserrat")
#usar showtext para familias tipográficas
showtext::showtext_auto()
#usar showtext para familias tipográficas
showtext::showtext_auto()
#limitamos al periodo posterior a 1750
filter(edificios, beginning >= "1799-01-01") %>%
ggplot(aes(beginning)) +
# geom_histogram(aes(y=..density..), colour="black", fill="white", alpha=0.5,position="identity") +
geom_density(fill = "#2166ac", alpha = 0.7) +
scale_y_continuous(labels=function(n){format(n, scientific = FALSE)})+
scale_x_date(date_breaks = "10 year",
date_labels = "%Y") + # muestra solo el año en la etiqueta
theme_cowplot(8)+
#  theme(title = element_text(family = "Montserrat"),
#        axis.text = element_text(family = "Montserrat")) +
labs(y = "",x = "", title = "Evolución del desarrollo urbano en Cieza")+
geom_vline(aes(xintercept=as.Date("1930-01-01")),linetype="dashed")+
geom_vline(aes(xintercept=as.Date("1900-01-01")),linetype="dashed")+
geom_vline(aes(xintercept=as.Date("1989-01-01")),linetype="dashed") +
geom_vline(aes(xintercept=as.Date("1975-01-01")),linetype="dashed") +
geom_vline(aes(xintercept=as.Date("2001-01-01")),linetype="dashed")
s
#limitamos al periodo posterior a 1750
filter(edificios, beginning >= "1799-01-01") %>%
ggplot(aes(beginning)) +
# geom_histogram(aes(y=..density..), colour="black", fill="white", alpha=0.5,position="identity") +
geom_density(fill = "#2166ac", alpha = 0.7) +
scale_y_continuous(labels=function(n){format(n, scientific = FALSE)})+
scale_x_date(date_breaks = "10 year",
date_labels = "%Y") + # muestra solo el año en la etiqueta
theme_cowplot(8)+
#  theme(title = element_text(family = "Montserrat"),
#        axis.text = element_text(family = "Montserrat")) +
labs(y = "",x = "", title = "Evolución del desarrollo urbano en Cieza")+
geom_vline(aes(xintercept=as.Date("1930-01-01")),linetype="dashed")+
geom_vline(aes(xintercept=as.Date("1900-01-01")),linetype="dashed")+
geom_vline(aes(xintercept=as.Date("1989-01-01")),linetype="dashed") +
geom_vline(aes(xintercept=as.Date("1975-01-01")),linetype="dashed") +
geom_vline(aes(xintercept=as.Date("2001-01-01")),linetype="dashed")
library(tidyverse)
#limitamos al periodo posterior a 1750
filter(edificios, beginning >= "1799-01-01") %>%
ggplot(aes(beginning)) +
# geom_histogram(aes(y=..density..), colour="black", fill="white", alpha=0.5,position="identity") +
geom_density(fill = "#2166ac", alpha = 0.7) +
scale_y_continuous(labels=function(n){format(n, scientific = FALSE)})+
scale_x_date(date_breaks = "10 year",
date_labels = "%Y") + # muestra solo el año en la etiqueta
theme_cowplot(8)+
labs(y = "",x = "", title = "Evolución del desarrollo urbano en Cieza")+
geom_vline(aes(xintercept=as.Date("1930-01-01")),linetype="dashed")+
geom_vline(aes(xintercept=as.Date("1900-01-01")),linetype="dashed")+
geom_vline(aes(xintercept=as.Date("1989-01-01")),linetype="dashed") +
geom_vline(aes(xintercept=as.Date("1975-01-01")),linetype="dashed") +
geom_vline(aes(xintercept=as.Date("2001-01-01")),linetype="dashed")
edificios
# cargo los datos para no hacer tanta operacion en linea
#load('radio25.RData')
edificios <-   load('images/radio25.RData')
edificios
# cargamos Leaflet
library(leaflet)
# transformamos el sistema de referencia
map_cieza<-st_transform(radio25,crs=4326)
library(sf)
# transformamos el sistema de referencia
map_cieza<-st_transform(radio25,crs=4326)
names(map_cieza)
table(map_cieza$year)
# creo escala de color
col_spec <- RColorBrewer::brewer.pal(10, "Spectral")
qpal <- colorNumeric(col_spec, map_cieza$year)
# como no hay apenas información anterior a 1900
map_cieza$year[map_cieza$year<1900]<-1900
# añado una columna para popup del mapa
map_cieza %>% mutate(popup_info=paste(sep = "<br/>", paste0("<b>","<i>", year,"<i>", "</b>"), currentUse)) %>%
mutate(lon=ifelse(is.na(lon), address.lon, lon),
lat=ifelse(is.na(lat),  address.lat, lat)) %>%
filter(!is.na(lon) & !grepl("CLOSED", year)) ->map_cieza
#pintar las capas
leaflet(map_cieza) %>%
addProviderTiles(providers$Stamen.TonerLite)  %>%
#addTiles() %>%
addPolygons(data = map_cieza,
stroke = F,
fill = TRUE,
color = ~qpal(year),
fillOpacity = 0.8,
popup = ~popup_info) %>%
addLegend("bottomright", pal = qpal, values = ~year,
title = "Antiguedad edificacion",
opacity = 1)
# creo escala de color
col_spec <- RColorBrewer::brewer.pal(5, "Spectral")
qpal <- colorNumeric(col_spec, map_cieza$year)
#pintar las capas
leaflet(map_cieza) %>%
addProviderTiles(providers$Stamen.TonerLite)  %>%
#addTiles() %>%
addPolygons(data = map_cieza,
stroke = F,
fill = TRUE,
color = ~qpal(year),
fillOpacity = 0.8,
popup = ~popup_info) %>%
addLegend("bottomright", pal = qpal, values = ~year,
title = "Antiguedad edificacion",
opacity = 1)
blogdown:::serve_site()
blogdown:::serve_site()
library(sf)
# cargamos Leaflet
library(leaflet)
# transformamos el sistema de referencia
map_cieza<-st_transform(radio25,crs=4326)
# creo escala de 5 colores con
col_spec <- RColorBrewer::brewer.pal(5, "Spectral")
qpal <- colorNumeric(col_spec, map_cieza$year)
# como no hay apenas información anterior a 1900
map_cieza$year[map_cieza$year<1900]<-1900
# añado una columna para popup del mapa
map_cieza %>% mutate(popup_info=paste(sep = "<br/>", paste0("<b>","<i>", year,"<i>", "</b>"), currentUse)) %>%
mutate(lon=ifelse(is.na(lon), address.lon, lon),
lat=ifelse(is.na(lat),  address.lat, lat)) %>%
filter(!is.na(lon) & !grepl("CLOSED", year)) ->map_cieza
#pintar las capas
leaflet(map_cieza) %>%
addProviderTiles(providers$Stamen.TonerLite)  %>%
#addTiles() %>%
addPolygons(data = map_cieza,
stroke = F,
fill = TRUE,
color = ~qpal(year),
fillOpacity = 0.8,
popup = ~popup_info) %>%
addLegend("bottomright", pal = qpal, values = ~year,
title = "Antiguedad edificacion",
opacity = 1)
blogdown:::serve_site()
# Pintamos el Mapa final en leaflet
leaflet(map_cieza) %>%
addProviderTiles(providers$Stamen.TonerLite)  %>%
addPolygons(data = map_cieza,
stroke = F,
fill = TRUE,
color = ~qpal(year),
fillOpacity = 0.8,
popup = ~popup_info) %>%
addLegend("bottomright", pal = qpal, values = ~year,
title = "Antiguedad edificacion",
opacity = 1)
# creo escala de 5 colores con
col_spec <- RColorBrewer::brewer.pal(5, "Spectral")
qpal <- colorNumeric(col_spec, map_cieza$year)
# añado una columna para popup del mapa
map_cieza %>% mutate(popup_info=paste(sep = "<br/>", paste0("<b>","<i>", year,"<i>", "</b>"), currentUse)) %>%
mutate(lon=ifelse(is.na(lon), address.lon, lon),
lat=ifelse(is.na(lat),  address.lat, lat)) %>%
filter(!is.na(lon) & !grepl("CLOSED", year)) ->map_cieza
# Pintamos el Mapa final en leaflet
leaflet(map_cieza) %>%
addProviderTiles(providers$Stamen.TonerLite)  %>%
addPolygons(data = map_cieza,
stroke = F,
fill = TRUE,
color = ~qpal(year),
fillOpacity = 0.8,
popup = ~popup_info) %>%
addLegend("bottomright", pal = qpal, values = ~year,
title = "Antiguedad edificacion",
opacity = 1)
leaflet(map_cieza) %>% addProviderTiles(providers$Stamen.TonerLite)
leaflet(map_cieza) %>%
addProviderTiles(providers$Stamen.TonerLite)%>%
addPolygons(data = map_cieza,
stroke = F,
fill = TRUE,
color = ~qpal(year),
fillOpacity = 0.8,
popup = ~popup_info)
check_site()
blogdown:::serve_site()
