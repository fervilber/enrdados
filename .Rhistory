geom_bar(aes(y = ..count..)) +
geom_flag(x=0)
dt_mar15
#devtools::install_github("rensa/ggflags")
ggplot(head(dt_mar15,12), aes(x=pais,y=y)) +
geom_point() +
geom_flag(x=0)
#devtools::install_github("rensa/ggflags")
ggplot(head(dt_mar15,12), aes(x=c(1:12),y=y)) +
geom_point() +
geom_flag(x=0)
#devtools::install_github("rensa/ggflags")
ggplot(head(dt_mar15,12), aes(x=(1:12),y=y)) +
geom_point() +
geom_flag(x=0)
#devtools::install_github("rensa/ggflags")
ggplot(head(dt_mar15,12), aes(x=1:12,y=y)) +
geom_point() +
geom_flag(x=0)
#devtools::install_github("rensa/ggflags")
ggplot(head(dt_mar15,12), aes(x=1:12,y=y)) +
geom_point()
#devtools::install_github("rensa/ggflags")
ggplot(head(dt_mar15,12), aes(x=1:12,y=y)) +
geom_point() +
geom_flag(country=estado)
#devtools::install_github("rensa/ggflags")
dd<-head(dt_mar15,12)
dd
ggplot(dd, aes(x=1:12,y=y)) +
geom_point() + geom_flag(country = dd$estado)
ggplot(dd, aes(x=1:12,y=y)) +
geom_point() +
geom_flag(country = estado)
ggplot(dd, aes(x=1:12,y=y)) +
geom_point() +
geom_flag(country = estado,size=8)
ggplot(dd, aes(x=1:12,y=y)) +
geom_point() +
geom_flag(aes(country = estado),size=8)
devtools::install_github("rensa/ggflags")
library(ggflags)
set.seed(1234)
d <- data.frame(x=rnorm(50), y=rnorm(50),
country=sample(c("ar","fr", "nz", "gb", "es", "ca"), 50, TRUE),
stringsAsFactors = FALSE)
ggplot(d, aes(x=x, y=y, country=country, size=x)) +
geom_flag() +
scale_country() +
scale_size(range = c(0, 15))
ggplot(d, aes(x=x, y=y, country=country, size=x)) +
geom_flag()
country
dt_mar15$estado<-tolower(countrycode(dt_mar15$pais,origin = 'country.name', destination = 'iso2c'))
ggplot(dd, aes(x=1:12,y=y)) +
geom_point() +
geom_flag(aes(country = estado),size=8)
#devtools::install_github("rensa/ggflags")
dd<-head(dt_mar15,12)
dd
ggplot(dd, aes(x=1:12,y=y)) +
geom_point() +
geom_flag(aes(country = estado),size=8)
ggplot(dd, aes(x=pais,y=y,fill=pais, country=estado)) +
geom_bar(stat="identity") +
geom_flag(size=8)+
labs(title='Fallecimientos por Cov-19 a fecha 15 de marzo 20') +
labs(y = 'num muertos',
x= "paises")+ theme_cowplot(8)
ggplot(dd, aes(x=pais,y=y,fill=pais, country=estado)) +
geom_bar(stat="identity") +
geom_flag(aes(y=y+200),size=8)+
labs(title='Fallecimientos por Cov-19 a fecha 15 de marzo 20') +
labs(y = 'num muertos',
x= "paises")+ theme_cowplot(8)
library(esquisse)
esquisse:::esquisser()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# MUERTES POR CORONAVIRUS
#obtenemos los datos de aquí
urlmuertes="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
# leemos como data frame
dat_m<-read_csv(url(urlmuertes))
# MUERTES POR CORONAVIRUS
#obtenemos los datos de aquí
urlmuertes="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
# leemos como data frame
dat_m<-read_csv(url(urlmuertes))
urlmuertes
urlmuertes="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
# leemos como data frame
dat_m<-read_csv(url(urlmuertes))
url(urlmuertes)
# leemos como data frame
dat_m<-read_csv(url(urlmuertes))
library(tidyverse)
# leemos como data frame
dat_m<-read_csv(url(urlmuertes))
# leemos el ultimo dato, ultima columna
hoy<-names(dat_m[,ncol(dat_m)])
# creo otra tabla con solo dos columnas
dt_ultimos<- dat_m[c('Country/Region',hoy)]
# cambio el nombre de estas col
colnames(dt_ultimos)<-c("pais","y")
#agregamos por pais, ya aue algunos tienen varias regiones
dt_ultimos <- aggregate(. ~ pais,dt_ultimos,sum)
# ordenamos la tabla de mayor a menor
dt_ultimos<-dt_ultimos[order(dt_ultimos$y, decreasing = TRUE),]
# converimos la col pais en factor
dt_ultimos$pais <- factor(dt_ultimos$pais,levels=dt_ultimos$pais)
#Creamos el gráfico con ggplot y guardamos en p
p<-ggplot(head(dt_ultimos,12), aes(x=pais,y=y,fill=pais))+
geom_bar(stat="identity") +
#theme(legend.position="none") +
labs(title=paste0('Fallecimientos por Cov-19 a fecha ', hoy)) +
labs(y = 'num muertos oficial', x= "paises")
p # pintamos p
as.Date(hoy)
mmddyy(hoy)
mdy(hoy)
library(lubridate)
dy(hoy)
mdy_hms(hoy)
hoy
mdy(hoy)
as.Date(mdy(hoy))
#Creamos el gráfico con ggplot y guardamos en p
p<-ggplot(head(dt_ultimos,12), aes(x=pais,y=y,fill=pais))+
geom_bar(stat="identity") +
#theme(legend.position="none") +
labs(title=paste0('Fallecimientos por Cov-19 a fecha ', as.Date(mdy(hoy)))) +
labs(y = 'num muertos oficial', x= "paises")
p # pintamos p
# cambiamos el formato de la grafica inicial
p<-p + theme_cowplot(8)
# Cargamos la librería
library(cowplot)
# cambiamos el formato de la grafica inicial
p<-p + theme_cowplot(8)
p
# cambiamos el formato de la grafica inicial
p1<-p + theme_cowplot(8)
p1
# Usamos la funcion de mala para comparar
plot_grid(p, p1, labels = c('A', 'B'), label_size = 15)
#Creamos el gráfico con ggplot y guardamos en p
p<-ggplot(head(dt_ultimos,12), aes(x=pais,y=y,fill=pais))+
geom_bar(stat="identity") +
#theme(legend.position="none") +
labs(title=paste0('Fallecimientos por Cov-19 a fecha ', as.Date(mdy(hoy)))) +
labs(y = 'num muertos oficial', x= "paises")
# Usamos la funcion de mala para comparar
plot_grid(p, p1, labels = c('A', 'B'), label_size = 15)
countrycode(dt_ultimos$pais,origin = 'country.name', destination = 'iso2c')
# Instalar flags
# devtools::install_github("rensa/ggflags")
library(ggflags)
library(countrycode)
countrycode(dt_ultimos$pais,origin = 'country.name', destination = 'iso2c')
# añadimos una columna más a la tabla dt_ultimos con el cod pais en mimnuscula
dt_ultimos$code<-tolower(countrycode(dt_ultimos$pais,origin = 'country.name', destination = 'iso2c'))
dt_ultimos
p3<-ggplot(dd, aes(x=pais,y=y,fill=pais, country=code)) +
geom_bar(stat="identity") +
geom_flag(aes(y=y+200),size=8)+
labs(title='Fallecimientos por Cov-19 a fecha 15 de marzo 20') +
labs(y = 'num muertos',
x= "paises")+ theme_cowplot(8)
p3
# pintamos la nueva gráfica
p3<-ggplot(dt_ultimos, aes(x=pais,y=y,fill=pais, country=code)) +
geom_bar(stat="identity") +
geom_flag(aes(y=y+200),size=8)+
labs(title='Fallecimientos por Cov-19 a fecha 15 de marzo 20') +
labs(y = 'num muertos',
x= "paises")+ theme_cowplot(8)
p3
# pintamos la nueva gráfica
p3<-ggplot(head(dt_ultimos,12), aes(x=pais,y=y,fill=pais, country=code)) +
geom_bar(stat="identity") +
geom_flag(aes(y=y+200),size=8)+
labs(title='Fallecimientos por Cov-19 a fecha 15 de marzo 20') +
labs(y = 'num muertos',
x= "paises")+ theme_cowplot(8)
p3
# pintamos la nueva gráfica
p3<-ggplot(head(dt_ultimos,12), aes(x=pais,y=y,fill=pais, country=code)) +
geom_bar(stat="identity") +
geom_flag(aes(y=y+500),size=8)+
labs(title='Fallecimientos por Cov-19 a fecha 15 de marzo 20') +
labs(y = 'num muertos',
x= "paises")+ theme_cowplot(8)
p3
# pintamos la nueva gráfica
p3<-ggplot(head(dt_ultimos,12), aes(x=pais,y=y,fill=pais, country=code)) +
geom_bar(stat="identity") +
geom_flag(aes(y=y+500),size=10)+
labs(title='Fallecimientos por Cov-19 a fecha 15 de marzo 20') +
labs(y = 'num muertos',
x= "paises")+ theme_cowplot(8)
p3
p3 +coord_flip()
#giramos las barras
p3 +coord_flip() +theme_tufte()
#giramos las barras
library(ggthemes)
install.packages("ggthemes")
p3 +coord_flip() +theme_tufte()
#giramos las barras
library(ggthemes)
p3 +coord_flip() +theme_tufte()
ls("package:ggthemes")[grepl("theme_", ls("package:ggthemes"))]
# algunos ejemplos
p3 +coord_flip() +theme_igray()
p3 +coord_flip() +theme_stata()
p3 +coord_flip() +theme_pander()
p3 +coord_flip() +theme_foundation()
p3 +coord_flip() +theme_economist()
p3 +coord_flip() +theme_excel_new()
p3 +coord_flip() +theme_fivethirtyeight()
p3 +coord_flip() +theme_excel()
p3 +coord_flip() +theme_pander()
p3 +coord_flip() +theme_gdocs()
p3 +coord_flip() +theme_few()
# algunos ejemplos
p3 +coord_flip() +theme_igray(5)
p3 +coord_flip() +theme_excel(10)
p3 +coord_flip() +theme_economist(10)
p3 +coord_flip() +theme_few(10)
# algunos ejemplos
p3 +coord_flip() +theme_igray(10)
# algunos ejemplos
p3 +coord_flip() +theme_tufte(10)
# Source: Frequency table
df <- head(dt_ultimos,12)#as.data.frame(table(mpg$class))
df
colnames(df) <- c("class", "freq", "code")
pie <- ggplot(df, aes(x = "", y=freq, fill = factor(class))) +
geom_bar(width = 1, stat = "identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: mpg")
pie + coord_polar(theta = "y", start=0)
theme_set(theme_classic())
pie <- ggplot(df, aes(x = "", y=freq, fill = factor(class))) +
geom_bar(width = 1, stat = "identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: mpg")
pie + coord_polar(theta = "y", start=0)
pie <- ggplot(df, aes(x = "", y=freq, fill = factor(class))) +
geom_bar(width = 1, stat = "identity") +
geom_flag(aes(country=code))
pie <- ggplot(df, aes(x = "", y=freq, fill = factor(class))) +
geom_bar(width = 1, stat = "identity") +
geom_flag(aes(country=code))+
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: mpg")
pie + coord_polar(theta = "y", start=0)
pie <- ggplot(df, aes(x = "", y=freq, fill = factor(class))) +
geom_bar(width = 1, stat = "identity") +
geom_flag(aes(y=y+500,country=code),size=10))+
pie <- ggplot(df, aes(x = "", y=freq, fill = factor(class))) +
geom_bar(width = 1, stat = "identity") +
geom_flag(aes(y=y+500,country=code),size=10)+
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: mpg")
pie + coord_polar(theta = "y", start=0)
pie <- ggplot(df, aes(x = "", y=freq, fill = factor(class))) +
geom_bar(width = 1, stat = "identity") +
geom_flag(aes(country=code),size=10)+
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: mpg")
pie + coord_polar(theta = "y", start=0)
ggplot(df, aes(area = y, fill = factor(class))) +
geom_treemap() +
geom_flag(aes(country=code),size=10)+
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Fallecidos por COV-19",
caption="Source: JH")
library(treemapify)
install.packages("treemapify")
library(treemapify)
ggplot(df, aes(area = y, fill = factor(class))) +
geom_treemap() +
geom_flag(aes(country=code),size=10)+
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Fallecidos por COV-19",
caption="Source: JH")
ggplot(df, aes(area = y, fill = factor(class))) +
geom_treemap()
ggplot(df, aes(area = freq, fill = factor(class))) +
geom_treemap()
label = code)) +
df
ggplot(df, aes(area = freq,
fill = factor(class),
label = factor(class))) +
geom_treemap() +
geom_treemap_subgroup_border() +
geom_treemap_subgroup_text(place = "centre",
grow = T,
alpha = 0.5,
colour = "black",
fontface = "italic",
min.size = 0) +
geom_treemap_text(colour = "white", place = "topleft", reflow = T)
ggplot(df, aes(area = "freq",
fill = factor(class),
label = "class")) +
geom_treemap() +
geom_treemap_subgroup_border() +
geom_treemap_subgroup_text(place = "centre",
grow = T,
alpha = 0.5,
colour = "black",
fontface = "italic",
min.size = 0) +
geom_treemap_text(colour = "white", place = "topleft", reflow = T)
ggplot(df, aes(area = freq,
fill = factor(class),
label = class)) +
geom_treemap() +
geom_treemap_text(colour = "white", place = "topleft", reflow = T)
ggplot(df, aes(area = freq,
fill = factor(class),
label = class)) +
geom_treemap() +
geom_treemap_text(colour = "white", place = "topleft", reflow = T)+
labs(fill="Estado",
x=NULL,
y=NULL,
title="Fallecidos por COV-19",
caption="Source: JH")
ggplot(df, aes(area = freq,
fill = factor(class),
label = class)) +
geom_treemap() +
geom_treemap_text(colour = "white", place = "topleft", reflow = T)+
labs(fill="Estado",
x=NULL,
y=NULL,
title="Fallecidos por COV-19",
caption="Source: JH") +
theme_cowplot(8)
ggplot(df, aes(area = freq,
fill = factor(class),
label = class)) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "topleft",
reflow = T,
grow = T,
alpha = 0.5)+
labs(fill="Estado",
x=NULL,
y=NULL,
title="Fallecidos por COV-19 abril 24 2020",
caption="Fuente: www.enRdados.net") +
theme_cowplot(8)
ggplot(df, aes(area = freq,
fill = factor(class),
label = class)) +
geom_treemap() +
geom_treemap_text(colour = "black",
place = "topleft",
reflow = T,
grow = T,
alpha = 0.5)+
labs(fill="Estado",
x=NULL,
y=NULL,
title="Fallecidos por COV-19 abril 24 2020",
caption="Fuente: www.enRdados.net") +
theme_cowplot(8)
pie <- ggplot(df, aes(x = "", y=freq, fill = factor(class))) +
geom_bar(width = 1, stat = "identity") +
geom_flag(aes(country=code),size=10)+
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="Pais",
x=NULL,
y=NULL,
title="Fallecidos por COV-19",
caption="Fuente: FVB")
pie + coord_polar(theta = "y", start=0)
pie <- ggplot(df, aes(x = "", y=freq, fill = factor(class))) +
geom_bar(width = 1, stat = "identity") +
#geom_flag(aes(country=code),size=10)+
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="Pais",
x=NULL,
y=NULL,
title="Fallecidos por COV-19",
caption="Fuente: FVB")
pie + coord_polar(theta = "y", start=0)
pie + coord_polar(theta = "y", start=0) +theme_cowplot(10)
pie + coord_polar(theta = "y", start=0)
theme_set(theme_classic(10))
pie + coord_polar(theta = "y", start=0)
install.packages("ggrepel")
p + theme_cowplot(8) +geom_text_repel()
library(ggrepel)
p + theme_cowplot(8) +geom_text_repel()
p + theme_cowplot(8) +geom_text_repel(aes(label=pais))
p + theme_cowplot(8) +geom_text_repel(aes(label=pais),size=9)
p + theme_cowplot(8) +geom_text_repel(aes(label=pais),size=4)
p + theme_cowplot(8) +geom_label_repel(aes(label=pais),size=4)
ggplot(df, aes(area = freq,
fill = factor(class),
label = class)) +
geom_treemap() +
geom_treemap_text(colour = "black",
place = "topleft",
reflow = T,
grow = T,
alpha = 0.5)+
labs(fill="Estado",
x=NULL,
y=NULL,
title="Fallecidos por COV-19 abril 24 2020",
caption="Fuente: www.enRdados.net") +
theme_cowplot(8) +theme(legend.title=element_blank())
ggplot(df, aes(area = freq,
fill = factor(class),
label = class)) +
geom_treemap() +
geom_treemap_text(colour = "black",
place = "topleft",
reflow = T,
grow = T,
alpha = 0.5)+
labs(fill="Estado",
x=NULL,
y=NULL,
title="Fallecidos por COV-19 abril 24 2020",
caption="Fuente: www.enRdados.net") +
theme_cowplot(8) +scale_fill(guide = 'none')
ggplot(df, aes(area = freq,
fill = factor(class),
label = class)) +
geom_treemap() +
geom_treemap_text(colour = "black",
place = "topleft",
reflow = T,
grow = T,
alpha = 0.5)+
labs(fill="Estado",
x=NULL,
y=NULL,
title="Fallecidos por COV-19 abril 24 2020",
caption="Fuente: www.enRdados.net") +
theme_cowplot(8) +scale_fill_discrete(guide = 'none')
p + theme_cowplot(8) +geom_label_repel(aes(label=pais),size=4) +scale_fill_discrete(guide = 'none')
p1 +geom_label_repel(aes(label=pais),size=4) +scale_fill_discrete(guide = 'none')
ggplot(df, aes(area = freq,
fill = factor(class),
label = class)) +
geom_treemap() +
geom_treemap_text(colour = "black",
place = "topleft",
reflow = T,
grow = T,
alpha = 0.5)+
labs(fill="Estado",
x=NULL,
y=NULL,
title="Fallecidos por COV-19 abril 24 2020",
caption="Fuente: www.enRdados.net") +
theme_cowplot(8) +
scale_fill_discrete(guide = 'none') # quito leyenda de fill
pie + coord_polar(theta = "y", start=0)+
geom_label_repel(aes(label=pais),size=4) +
scale_fill_discrete(guide = 'none') # quitamos la escala de fill
pie + coord_polar(theta = "y", start=0)+
geom_label_repel(aes(label=pais),size=4)
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
