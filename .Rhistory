sum(map_int(0:10000,montana))
library(purrr)
library(purrr)
# num montala entre 0 y 10.000
sum(map_int(0:10000,montana))
# entre:
ale<-100:10000
# formamos un data frame con el numero y si es o no montaña
ale<-data.frame(int=ale,montana=map_int(ale,montana))
# nos quedamos solo con los montaña
solomon_ale<-ale[ale$montana==1,]
# cojemos 5 ejemplos
ejemplos<-sample(solomon_ale$int,5)
# los pinto aunque antes los transformo para poder pintarlo
# separamos las cifras
ejemplo_l<-strsplit(as.character(ejemplos), "")
a1<-map(ejemplo_l,~.x %>% as.integer())
# lo guardo como data frame para pintar
a2<- a1 %>% set_names(as.character(ejemplos)) %>% as.data.frame()
# entre:
ale<-100:10000
# formamos un data frame con el numero y si es o no montaña
ale<-data.frame(int=ale,montana=map_int(ale,montana))
# nos quedamos solo con los montaña
solomon_ale<-ale[ale$montana==1,]
# cojemos 5 ejemplos
ejemplos<-sample(solomon_ale$int,5)
# los pinto aunque antes los transformo para poder pintarlo
# separamos las cifras
ejemplo_l<-strsplit(as.character(ejemplos), "")
a1<-map(ejemplo_l,~.x %>% as.integer())
a1
# lo guardo como data frame para pintar
a2<- a1 %>% set_names(as.character(ejemplos)) %>% as.data.frame()
ejemplos
a2
#library(purrr)
library(tidyverse)
# lo guardo como data frame para pintar
a2<- a1 %>% set_names(as.character(ejemplos)) %>% as.data.frame()
a1 %>% set_names(as.character(ejemplos))
# entre:
ale<-1000:10000
# formamos un data frame con el numero y si es o no montaña
ale<-data.frame(int=ale,montana=map_int(ale,montana))
# cojemos 5 ejemplos
ejemplos<-sample(solomon_ale$int,5)
# los pinto aunque antes los transformo para poder pintarlo
# separamos las cifras
ejemplo_l<-strsplit(as.character(ejemplos), "")
a1<-map(ejemplo_l,~.x %>% as.integer())
# lo guardo como data frame para pintar
a2<- a1 %>% set_names(as.character(ejemplos)) %>% as.data.frame()
a1
# entre:
ale<-1000:10000
# formamos un data frame con el numero y si es o no montaña
ale<-data.frame(int=ale,montana=map_int(ale,montana))
ale
# nos quedamos solo con los montaña
solomon_ale<-ale[ale$montana==1,]
solomon_ale
solomon_ale
head(solomon_ale)
head(ale)
print(head(ale))
# cojemos 5 ejemplos
ejemplos<-sample(solomon_ale$int,5)
ejemplos
# los pinto aunque antes los transformo para poder pintarlo
# separamos las cifras
ejemplo_l<-strsplit(as.character(ejemplos), "")
a1<-map(ejemplo_l,~.x %>% as.integer())
# lo guardo como data frame para pintar
a2<- a1 %>% set_names(as.character(ejemplos)) %>% as.data.frame()
# pintamos
par(bg=gray(.05), oma=c(1,1,1,1), mar=c(1,1,1,1))
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,6),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
}
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,6),lty=1,lwd=7,
main="Algunos números montaña")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
}
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,6),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
}
par(bg=gray(.05), oma=c(1,1,1,1), mar=c(1,1,1,1))
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,6),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
}
blogdown:::serve_site()
# Ejemplo de algoritmo para numeros montaña
num<-1243821
separa<-strsplit(as.character(num), "")[[1]]
separa<-as.integer(separa)
d_separa<-diff(separa)
signo<-sign(d_separa)
diff(signo)
install.packages("plotrix")
max(a2[,i])
colname(a2[,i])
name(a2[,i])
colnames(a2)
colnames(a2)[2]
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(max(a2[,i]),max(a2[,i]), colnames(a2)[i], col="white",cex = 1)
}
par(bg=gray(.05), oma=c(1,1,1,1), mar=c(1,1,1,1))
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(max(a2[,i]),max(a2[,i]), colnames(a2)[i], col="white",cex = 1)
}
par(bg=gray(.05), oma=c(1,1,1,1), mar=c(1,1,1,1))
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(max(a2[,i]),max(a2[,i]), colnames(a2)[i], col="white")
}
text(max(a2[,i]),max(a2[,i]), colnames(a2)[i], col="white")
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(max(a2[,i]),max(a2[,i]), colnames(a2)[i], col="white")
}
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(max(a2[,i]),max(a2[,i]), colnames(a2)[i], col="red")
}
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(6,max(a2[,i]), colnames(a2)[i], col="red")
}
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(6,max(a2[,i]), colnames(a2)[i], col="red",cex=3)
}
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(0,max(a2[,i]), colnames(a2)[i], col="red",cex=3)
}
par(bg=gray(.05), oma=c(1,1,1,1), mar=c(1,1,1,1))
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(0,max(a2[,i]), colnames(a2)[i], col="red",cex=0.2)
}
par(bg=gray(.05), oma=c(1,1,1,1), mar=c(1,1,1,1))
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(1,max(a2[,i]), colnames(a2)[i], col="red",cex=0.3)
}
par(bg=gray(.05), oma=c(1,1,1,1), mar=c(1,1,1,1))
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
#escribimos la cifra a la izq
text(1,max(a2[,1]), colnames(a2)[1], col="red",cex=0.5)
#añadimos linea base en cero y
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(1,max(a2[,i]), colnames(a2)[i], col="red",cex=0.5)
}
par(bg=gray(.05), oma=c(1,1,1,1), mar=c(1,1,1,1))
plot(a2[,1],type="l",col=gray(0.95),axes=F,
ylim=c(0,9),xlim=c(0,5),lty=1,lwd=7,
main="Algunos números montaña")
#escribimos la cifra a la izq
text(1,max(a2[,1]), colnames(a2)[1], col="red",cex=0.6)
#añadimos linea base en cero y
abline(h=0,col="grey")
for(i in 2:5){
lines(a2[,i],col=gray(0.9-i/10),lty=i,lwd=6-i)
text(1,max(a2[,i]), colnames(a2)[i], col="red",cex=0.6)
}
blogdown:::serve_site()
blogdown:::new_post_addin()
library(osmdata)
library(tidyverse)
library(tidyverse)
library(sf)
caja<-getbb("San Javier, Murcia")
# bajamos la latitud de la caja hasta Cabo de Palos
# para sacar todo el Mar Menor
caja[2,1]<-37.60
# bajamos la latitud de la caja hasta Cabo de Palos
# para sacar todo el Mar Menor
caja[2,1]<-37.60
caja
# Hacemos una consulta a OSM y descargamos datos como capa sf
agua <- opq(caja) %>%
add_osm_feature(key = 'natural', value = 'water') %>%
osmdata_sf()
library(leaflet)
# carga del plano base
leaflet()  %>%  addTiles() %>%
addFeatures(agua,color = "red")
# carga del plano base
leaflet()  %>%  addTiles() %>%
addPolylines()(agua,color = "red")
agua
leaflet() %>%
addTiles() %>%
addPolygons(data = agua$osm_polygons,stroke = TRUE, fillOpacity = 0.8)
leaflet() %>% addPolygons(data = agua$osm_polygons,stroke = TRUE, fillOpacity = 0.8)
rios <- opq(caja) %>%
add_osm_feature(key = 'waterway') %>%
osmdata_sf()
# carga del plano base
leaflet()  %>%  addTiles() %>%
addPolylines(rios$osm_lines,color = "red")
library(mapview)
leaflet(rios)%>% addTiles() %>%
addFeatures(rios,color = "red")
leaflet(rios)%>% addTiles() %>%
addFeatures(rios$osm_lines,color = "red")
leaflet(rios)%>% addTiles() %>%
addFeatures(rios$osm_lines,color = "red",weight=12,label = ~rios$osm_lines$name)
rios
st_crs(rios)
st_crs(rios)<-4326
st_crs(rios$osm_lines)
leaflet(rios$osm_lines)%>% addTiles() %>%
addFeatures(rios$osm_lines,color = "red",weight=12,label = ~rios$osm_lines$name)
#    st_crs(rios$osm_lines)<-4326
plot(rios$osm_lines)
leaflet(rios$osm_lines)%>% addTiles() %>%
addFeatures(st_geomatry(rios$osm_lines),color = "red",weight=12,label = ~rios$osm_lines$name)
leaflet(rios$osm_lines)%>% addTiles() %>%
addFeatures(st_geometry(rios$osm_lines),color = "red",weight=12,label = ~rios$osm_lines$name)
# carga del plano base
leaflet(rios$osm_lines)  %>%  addTiles() %>%
addPolylines(st_geometry(rios$osm_lines),color = "red")
# carga del plano base
leaflet(rios$osm_lines)  %>%  addTiles() %>%
addPolylines(data=st_geometry(rios$osm_lines),color = "red")
# carga del plano base
leaflet(rios$osm_multilines)  %>%  addTiles() %>%
addPolylines(data=st_geometry(rios$osm_multilines),color = "red")
#    st_crs(rios$osm_lines)<-4326
plot(st_geometry(rios$osm_multilines))
leaflet(rios$osm_lines)%>%
addFeatures(st_geometry(rios$osm_lines),color = "red",weight=12,label = ~rios$osm_lines$name)
rios$osm_lines
leaflet(rios$osm_lines)%>%
addFeatures(rios$osm_lines,color = "red",weight=12,label = ~rios$osm_lines$name)
rios
leaflet(rios$osm_lines)%>%
addFeatures(rios$osm_polygons,color = "red",weight=12,label = ~rios$osm_polygons$name)
leaflet(rios$osm_polygons)%>% addTiles() %>%
addFeatures(rios$osm_polygons,color = "red",weight=12,label = ~rios$osm_polygons$name)
leaflet() %>%
addTiles() %>%
addCircleMarkers(data = rios$osm_lines,radius = 7, color ="blue")
leaflet() %>%
addTiles() %>%
addCircleMarkers(data = rios$osm_points ,radius = 7, color ="blue")
unclass(rios$osm_lines)
st_coordinates(unclass(rios$osm_lines))
leaflet() %>%
addTiles() %>%
addPolylines(data = st_geometry(unclass(rios$osm_lines))  color ="blue")
addPolylines(data = st_geometry(unclass(rios$osm_lines),color ="blue")
leaflet() %>%
addTiles() %>%
addPolylines(data = st_geometry(unclass(rios$osm_lines),color ="blue"))
leaflet() %>%
addTiles() %>%
addPolylines(data = st_geometry(rios$osm_lines),color ="blue")
names(st_geometry(rios$osm_lines)) = NULL
leaflet(rios$osm_lines) %>%
addTiles() %>%
addPolylines(color ="blue")
leaflet(rios$osm_lines)%>% addTiles() %>%
addFeatures(rios$osm_lines,color = "red",weight=12,label = ~rios$osm_polygons$name)
rios$osm_lines
head(rios)
str(rios)
Class(rios)
class(rios)
head(rios)
str(rios$osm_lines)
knitr::kable(head(rios),"html")
available_features( )
# Arreglamos el error de sf con las polilineas
# borrando los nombres de la capa de lineas
# si no haces esto no se pinta ..es un bug
names(st_geometry(rios$osm_lines)) = NULL
# Dibujamos el mapa con Leaflet
leaflet(rios$osm_lines) %>% addTiles() %>% # carga el mosaico base de OSM
addPolylines(color ="blue")# carga la capa de lineas de rios
# Dibujamos el mapa con Leaflet
leaflet(rios$osm_lines) %>% addTiles() %>% # carga el mosaico base de OSM
addPolylines(color ="blue",label = ~rios$osm_lines$name )# carga la capa de lineas de rios
mercadonasMM<-opq(caja) %>%
add_osm_feature("name","Mercadona")%>%
add_osm_feature("shop","supermarket")
mercadonasMM
mercadonasMM<-opq(caja) %>%
add_osm_feature("name","Mercadona")%>%
add_osm_feature("shop","supermarket") %>%  osmdata_sf()
mercadonasMM
# Dibujamos el mapa con Leaflet
leaflet(rios$osm_lines) %>% addTiles() %>% # carga el mosaico base de OSM
addPolylines(color ="blue",label = ~rios$osm_lines$name ) %>% # carga la capa de lineas de rios
addCircleMarkers(mercadonasMM$osm_points,radius = 7, color = "red")
# Dibujamos el mapa con Leaflet
leaflet(rios$osm_lines) %>% addTiles() %>% # carga el mosaico base de OSM
addPolylines(color ="blue",label = ~rios$osm_lines$name ) %>% # carga la capa de lineas de rios
addCircleMarkers(st_geometry(mercadonasMM$osm_points),radius = 7, color = "red")
mercadonasMM$osm_points
# Dibujamos el mapa con Leaflet
leaflet(rios$osm_lines) %>% addTiles() %>% # carga el mosaico base de OSM
addPolylines(color ="blue",label = ~rios$osm_lines$name ) %>% # carga la capa de lineas de rios
addCircleMarkers(data=mercadonasMM$osm_points,radius = 7, color = "red")
# Dibujamos el mapa con Leaflet
leaflet(rios$osm_lines) %>% addTiles() %>% # carga el mosaico base de OSM
addPolylines(color ="blue",label = ~rios$osm_lines$name ) %>% # carga la capa de lineas de rios
addCircleMarkers(data=mercadonasMM$osm_points,radius = 7, color = "red",
popup= ~mercadonasMM$osm_points$name)
chs
chs <- st_read("data/CHS_Cuenca_del_Segura.shp")
chs <- st_read("../../static/capas/CHS_Cuenca_del_Segura.shp")
library(sf)
chs <- st_read("../../static/capas/CHS_Cuenca_del_Segura.shp")
getwd()
chs <- st_read("../../static/capas/CHS_Cuenca_del_Segura.shp")
chs <- st_read("../static/capas/CHS_Cuenca_del_Segura.shp")
chs <- st_read("static/capas/CHS_Cuenca_del_Segura.shp")
st_crs(chs)<-23030
rios
rios$osm_points
chs<-st_transform(chs,crs=4326)
chs1<-st_crop(chs,rios)
chs1<-st_crop(chs,rios$osm_lines)
plot(chs1)
chs<-st_crop(chs,rios$osm_lines)
cfondo<-"sandybrown" # rgb(255,245,245,max = 255)
clineas<-rgb(15,30,55,max = 255)
cfondo<-"sandybrown" # rgb(255,245,245,max = 255)
clineas<-rgb(15,30,55,max = 255)
#cfondo<-rgb(15,30,55,max = 255)
#clineas<-rgb(230,230,255,max = 255)
c1<-alpha("white",0.8)
par(bg=cfondo, oma=c(0,0,0,0), mar=c(0,0,2,0),adj=0)
plot(st_geometry(agua$osm_polygons),col=cfondo,
main="MAR MENOR (MURCIA) ",
family="sans",font=1,
col.main=clineas, cex.main=1.5)
plot(st_geometry(chs),add=T, lwd=0.1,lty=1,col=clineas)
plot(rios1, add=T, lwd=0.5,col=cfondo)
# De la capa de rios que ya tenemos
# seleccionamos los cursos de agua y canales
rios1<-rios$osm_lines %>%
select(waterway,name)%>%
filter(waterway =='river' | waterway =='canal' | waterway =='stream')
# descargamos capas de OSM y almacenamos como sf
# capa con poligonos de lagunas
agua <- opq(caja) %>%
add_osm_feature(key = 'natural', value = 'water') %>%
osmdata_sf()
# linea de costa
costa <- opq(caja) %>%
add_osm_feature(key = 'natural', value = 'coastline') %>%
osmdata_sf()
# calles de los pueblos
calles<- opq(caja) %>%
add_osm_feature(key = 'highway',value = 'residential') %>%
osmdata_sf()
#agricola <- opq(caja) %>%
#  add_osm_feature(key = 'landuse',value = 'farmland') %>%
#  osmdata_sf()
# Carreteras
carreteras <- opq(caja) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf()
# seleccionamos dentro de carreteras las principales y secundarias
carr_secun<-carreteras$osm_lines %>% #
select(highway,name)%>% #
filter(highway =='motorway' | highway =='trunk' | highway =='secondary')
# solo autovías
autovia <- carreteras$osm_lines %>%
select(highway)%>%
filter(highway =='motorway' | highway =='trunk')
# De la capa de rios que ya tenemos
# seleccionamos los cursos de agua y canales
rios1<-rios$osm_lines %>%
select(waterway,name)%>%
filter(waterway =='river' | waterway =='canal' | waterway =='stream')
# voy a descargar una capa que tengo de shp de la confederación, para delimitar las costas
# cargo otras capas en shp que tengo
# pero que están en UTM por lo que transformo crs
#../../
chs <- st_read("static/capas/CHS_Cuenca_del_Segura.shp")
st_crs(chs)<-23030
chs<-st_transform(chs,crs=4326)
# cortamos la capa a la zona del Mar Menor
# para eso usamos la capa de lineas de rios
chs<-st_crop(chs,rios$osm_lines)
cfondo<-"sandybrown" # rgb(255,245,245,max = 255)
clineas<-rgb(15,30,55,max = 255)
#cfondo<-rgb(15,30,55,max = 255)
#clineas<-rgb(230,230,255,max = 255)
c1<-alpha("white",0.8)
par(bg=cfondo, oma=c(0,0,0,0), mar=c(0,0,2,0),adj=0)
plot(st_geometry(agua$osm_polygons),col=cfondo,
main="MAR MENOR (MURCIA) ",
family="sans",font=1,
col.main=clineas, cex.main=1.5)
plot(st_geometry(chs),add=T, lwd=0.1,lty=1,col=clineas)
plot(rios1, add=T, lwd=0.5,col=cfondo)
buffer<-st_buffer(chs,0.003)
#buffer<-st_buffer(dato2$osm_lines,0.003)
plot(st_cast(st_union(buffer),"MULTILINESTRING"),add=T,lwd=0.1,col=c1)
buffer<-st_buffer(chs,0.001)
#    buffer<-st_buffer(dato2$osm_lines,0.001)
#plot(st_geometry(st_union(buffer)),add=T,lty=1,col="blue",bg="blank")
plot(st_cast(st_union(buffer),"MULTILINESTRING"),add=T,lwd=0.2,col=c1)
#aguas
plot(st_geometry(agua$osm_polygons),add=T,lty="blank",col=cfondo)
# costa
plot(st_geometry(costa$osm_lines), add=T, lwd=0.1,col=clineas)
#plot(st_geometry(dato2$osm_polygons), add=T, lwd=0.2,col="red")
#plot(caja_zona,add=T)
plot(st_geometry(carr_secun), add=T, lwd=0.5,col=c1)
plot(autovia, add=T, lwd=1,col=c1)
#plot(st_geometry(calles$osm_lines), add=T, lwd=1, col= "#FFFFFF80")
plot(calles$osm_lines, add=T, lwd=0.2, col= c1)
pdf("plot_MarMenor.pdf", width=3.5, height=5)
cfondo<-"sandybrown" # rgb(255,245,245,max = 255)
clineas<-rgb(15,30,55,max = 255)
#cfondo<-rgb(15,30,55,max = 255)
#clineas<-rgb(230,230,255,max = 255)
c1<-alpha("white",0.8)
par(bg=cfondo, oma=c(0,0,0,0), mar=c(0,0,2,0),adj=0)
plot(st_geometry(agua$osm_polygons),col=cfondo,
main="MAR MENOR (MURCIA) ",
family="sans",font=1,
col.main=clineas, cex.main=1.5)
plot(st_geometry(chs),add=T, lwd=0.1,lty=1,col=clineas)
plot(rios1, add=T, lwd=0.5,col=cfondo)
buffer<-st_buffer(chs,0.003)
#buffer<-st_buffer(dato2$osm_lines,0.003)
plot(st_cast(st_union(buffer),"MULTILINESTRING"),add=T,lwd=0.1,col=c1)
buffer<-st_buffer(chs,0.001)
plot(st_cast(st_union(buffer),"MULTILINESTRING"),add=T,lwd=0.2,col=c1)
#aguas
plot(st_geometry(agua$osm_polygons),add=T,lty="blank",col=cfondo)
plot(st_geometry(costa$osm_lines), add=T, lwd=0.1,col=clineas)# costa
plot(st_geometry(carr_secun), add=T, lwd=0.5,col=c1)# carreteras secundarias
plot(autovia, add=T, lwd=1,col=c1) # autovía
plot(calles$osm_lines, add=T, lwd=0.2, col= c1) # calles
#text(-0.86,37.85, cex=2.2,"Mar Menor",col="white")
dev.off()
blogdown:::serve_site()
