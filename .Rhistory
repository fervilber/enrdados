# Definimos los nodos de la red, que se numeran automáticamente de 0 a ..
nodes = data.frame("name" =
c("Fuente clara",  # Node 0
"Bombeo 1",      # Node 1
"Ayt. Villalocos",  # Node 2
"Ayt. Torrecilla",         # Nodo 3
"C.RR 1",        # Nodo 4
"C.RR 2",        # Nodo 5
"Embalse alto",  # Nodo 6
"Ayt. Puerto Plata", # Nodo 7
"Ayt. Jerjes",   # Nodo 8
"Fuente Negra"   # Nodo 9
))
# Definimos ahora los flujos en la forma siguiente:
# nodo origen, nodo final, cantidad de flujo
links = as.data.frame(matrix(c(
0, 1, 53, # desde, a, cuanto
0, 3, 5,
0, 4, 10,
1, 3, 5,
1, 8, 3,
1, 5, 7,
1, 4, 5,
1, 6, 32,
6,2,25,
6,7,7,
6,3,2,
9,3,40,
9,1,3),
byrow = TRUE, ncol = 3))
# nombramos las columnas con los nombres estándar de la librería networkD3
names(links) = c("source", "target", "value")
# Llamamos a la funcion de dibujo del diagrama
sankeyNetwork(Links = links, Nodes = nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
fontSize= 10, nodeWidth = 50,nodePadding = 10,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"
)
)
knitr::kable(head(energy),"html")
head(energy)
str(energy)
class(energy)
blogdown:::insert_image_addin()
blogdown:::serve_site()
energy$links$energy_type
blogdown:::serve_site()
install.packages("radiant")
install.packages("ggforce")
blogdown:::serve_site()
# Ejemplo de diagrama de flujo SANKEY
library(networkD3)      # cargamos librería
# Definimos los nodos de la red, que se numeran automáticamente de 0 a ..
nodes = data.frame("name" =
c("Fuente clara",  # Node 0
"Bombeo 1",      # Node 1
"Ayt. Villalocos",  # Node 2
"Ayt. Torrecilla",         # Nodo 3
"C.RR 1",        # Nodo 4
"C.RR 2",        # Nodo 5
"Embalse alto",  # Nodo 6
"Ayt. Puerto Plata", # Nodo 7
"Ayt. Jerjes",   # Nodo 8
"Fuente Negra"   # Nodo 9
))
# Definimos ahora los flujos en la forma siguiente:
# nodo origen, nodo final, cantidad de flujo
links = as.data.frame(matrix(c(
0, 1, 53, # desde, a, cuanto
0, 3, 5,
0, 4, 10,
1, 3, 5,
1, 8, 3,
1, 5, 7,
1, 4, 5,
1, 6, 32,
6,2,25,
6,7,7,
6,3,2,
9,3,40,
9,1,3),
byrow = TRUE, ncol = 3))
# nombramos las columnas con los nombres estándar de la librería networkD3
names(links) = c("source", "target", "value")
# Llamamos a la funcion de dibujo del diagrama
sankeyNetwork(Links = links, Nodes = nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
fontSize= 10, nodeWidth = 50,nodePadding = 10,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"
)
)
head(links)
head(nodes)
as.factor(nodes)
bd <- gather_set_data(links, 1:2)
library(reshape2)
bd <- gather_set_data(links, 1:2)
library(ggforce)
bd <- gather_set_data(links, 1:2)
bd
head(links)
links$nom<-links$source+1
head(links)
head(nodes)
head(as.factor(nodes))
head(as.factor(nodes))
data <- reshape2::melt(Titanic)
data <- reshape2::melt(Titanic)
head(gather_set_data(data, 1:4),12)
bd
gplot(bd, aes(x, id = id, split = y, value = value)) +
geom_parallel_sets(aes(fill = y), alpha = 0.3, axis.width = 0.1) +
geom_parallel_sets_axes(axis.width = 0.1) +
geom_parallel_sets_labels(colour = 'white')
ggplot(bd, aes(x, id = id, split = y, value = value)) +
geom_parallel_sets(aes(fill = y), alpha = 0.3, axis.width = 0.1) +
geom_parallel_sets_axes(axis.width = 0.1) +
geom_parallel_sets_labels(colour = 'white')
head(links)
links$source<-links$source+1
links[,-4]
bd <- gather_set_data(links, 1:2)
bd
links$target<-links$target+1
bd <- gather_set_data(links, 1:2)
bd
#links[,-4]
ggplot(links, aes(bd, id = id, split = y, value = value)) +
geom_parallel_sets(aes(fill = y), alpha = 0.3, axis.width = 0.1) +
head(as.factor(nodes))
#links[,-4]
ggplot(links, aes(links, id = id, split = y, value = value)) +
geom_parallel_sets(aes(fill = y), alpha = 0.3, axis.width = 0.1) +
head(as.factor(nodes))
#links[,-4]
ggplot(bd, aes(x, id = id, split = y, value = value)) +
geom_parallel_sets(aes(fill = y), alpha = 0.3, axis.width = 0.1) +
head(as.factor(nodes))
#links[,-4]
ggplot(bd, aes(x, id = id, split = y, value = value)) +
geom_parallel_sets(aes(fill = y), alpha = 0.3, axis.width = 0.1) +
geom_parallel_sets_axes(axis.width = 0.1) +
geom_parallel_sets_labels(colour = 'white')
#links[,-4]
ggplot(bd, aes(x, id = id, split = y, value = value)) +
geom_parallel_sets(aes(fill = x), alpha = 0.3, axis.width = 0.1) +
geom_parallel_sets_axes(axis.width = 0.1) +
geom_parallel_sets_labels(colour = 'white')
#links[,-4]
ggplot(bd, aes(x, id = id, split = y, value = value)) +
geom_parallel_sets(aes(fill = nom), alpha = 0.6, axis.width = 0.1) +
geom_parallel_sets_axes(axis.width = 0.1) +
geom_parallel_sets_labels(colour = 'white')
head(links)
links[,-4]
links<-links[,-4]
links
nodes
head(as.factor(nodes))
links$nom<-factor(links$source, levels = c(9, 5, 4, 3, 6, 7, 8, 2, 1, 10))
links
fac<-as.factor(nodes))
fac<-as.factor(nodes)
fac
fac[2]
fac(2)
fac[[2]]
fac[2]
fac[1]
fac
links$nom[3]
links$nom[1]
links$nom[12]
nodes[links$nom[12]]
links$nom[12]
nodes[links$source]
links$nombre<-nodes[links$source]
nodes
links$source
sapply(links$source, function(x){nodes[x]})
nodes
nodes$name[1]
sapply(links$source, function(x){nodes$name[x]})
links$origen<-sapply(links$source, function(x){nodes$name[x]})
links$destino<-sapply(links$target, function(x){nodes$name[x]})
links
links<-links[,-4]
links
bd <- gather_set_data(links, 4:5)
bd
ggplot(bd, aes(x, id = id, split = y, value = value)) +
geom_parallel_sets(aes(fill = nom), alpha = 0.6, axis.width = 0.1) +
geom_parallel_sets_axes(axis.width = 0.1) +
geom_parallel_sets_labels(colour = 'white')
ggplot(bd, aes(x, id = id, split = y, value = value)) +
geom_parallel_sets(aes(fill = y), alpha = 0.6, axis.width = 0.1) +
geom_parallel_sets_axes(axis.width = 0.1) +
geom_parallel_sets_labels(colour = 'white')
ggplot(bd, aes(x, id = id, split = y, value = value)) +
geom_parallel_sets(aes(fill = value), alpha = 0.6, axis.width = 0.1) +
geom_parallel_sets_axes(axis.width = 0.1) +
geom_parallel_sets_labels(colour = 'white')
ggplot(bd, aes(x, id = id, split = y, value = value)) +
geom_parallel_sets(aes(fill = value), alpha = 0.6, axis.width = 0.1) +
geom_parallel_sets_axes(axis.width = 0.3) +
geom_parallel_sets_labels(colour = 'white')
head(links)
blogdown:::serve_site()
blogdown:::new_post_addin()
tabla<-tibble::tribble(
~origen, ~destino,             ~punto_destino,    ~Volumen,         ~Grupo,
16,       15,         "Captacion planta", "12155.437",       "PLANTA",
1,        2,           "Aguilas planta",    "64.585",       "C.RR.A",
1,        3,        "Aguilas Salinares",   "682.884",       "C.RR.A",
14,        4, "Aguilas Fuente del Pobre",   "442.198",       "C.RR.A",
14,        5,       "Aguilas toma nueva",   "307.868",       "C.RR.A",
1,        6,                  "Pulpi 1",   "125.661",       "C.RR.P",
14,        7,             "Pulpi bombeo",   "453.680",       "C.RR.P",
14,        8,         "Pulpi Toma vagon",   "384.699",       "C.RR.P",
1,        9,                      "MCT",     "0.000", "Ayuntamiento",
13,       10,            "Pto Lumbreras",   "685.458",       "C.RR.T",
13,       11,                   "Totana",   "272.581",       "C.RR.T",
13,       12,                    "Lorca",  "1942.262",       "C.RR.L",
14,       13,           "Cerro Colorado",  "2900.301",       "PLANTA",
1,       14,                 "2escalon",  "4614.407",       "PLANTA",
15,        1,          "Producto planta",  "5361.876",       "PLANTA",
1,       16,                      "Mar",  "6793.561",       "PLANTA"
)
kable(tabla)
knitr::kable(tabla)
tabla<-tibble::tribble(
~origen, ~destino,             ~punto_destino,    ~Volumen,         ~Grupo,
16,       15,         "Captacion planta", "12155.437",       "PLANTA",
1,        2,           "C.RR.A planta",    "64.585",       "C.RR.A",
1,        3,        "C.RR.A Salinares",   "682.884",       "C.RR.A",
14,        4, "C.RR.A Fuente del Pobre",   "442.198",       "C.RR.A",
14,        5,       "C.RR.A toma nueva",   "307.868",       "C.RR.A",
1,        6,            "C.RR.P Toma1",   "125.661",       "C.RR.P",
14,        7,             "C.RR.P bombeo",   "453.680",       "C.RR.P",
14,        8,         "C.RR.P Toma vagon",   "384.699",       "C.RR.P",
1,        9,                      "Ayuntamiento",     "0.000", "Ayuntamiento",
13,       10,            "C.RR.T",   "685.458",       "C.RR.T",
13,       11,                   "C.RR.T2",   "272.581",       "C.RR.T",
13,       12,                    "C.RR.L",  "1942.262",       "C.RR.L",
14,       13,           "Embalse",  "2900.301",       "PLANTA",
1,       14,                 "Bombeo",  "4614.407",       "PLANTA",
15,        1,          "Producto planta",  "5361.876",       "PLANTA",
1,       16,                      "Mar",  "6793.561",       "PLANTA"
)
knitr::kable(tabla)
knitr::kable(tabla, "HTML")
knitr::kable(tabla, "html")
# tabla de enlaces
enlaces<-data.frame(stringsAsFactors=FALSE,
from = c(16, 1, 1, 14, 14, 1, 14, 14, 1, 13, 13, 13, 14, 1, 15, 1),
to = c(15, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 16))
# tabla de nodos
nodos<-data.frame(stringsAsFactors=FALSE,
to = c(15, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 16),
punto_destino = c("Captacion planta", "Aguilas planta", "Aguilas Salinares",
"Aguilas Fuente del Pobre", "Aguilas toma nueva",
"Pulpi 1", "Pulpi bombeo", "Pulpi Toma vagon", "MCT",
"Pto Lumbreras", "Totana", "Lorca", "Cerro Colorado", "2escalon",
"Producto planta", "Mar"),
Volumen = c("12155.437", "64.585", "682.884", "442.198", "307.868",
"125.661", "453.680", "384.699", "0.000", "685.458", "272.581",
"1942.262", "2900.301", "4614.407", "5361.876", "6793.561"),
Grupo = c("PLANTA", "C.RR.A", "C.RR.A", "C.RR.A", "C.RR.A",
"C.RR.P", "C.RR.P", "C.RR.P", "Ayuntamiento", "C.RR.T",
"C.RR.T", "C.RR.L", "PLANTA", "PLANTA", "PLANTA", "PLANTA"))
library(igraph)
# convierto en hm3 la variable de volumen
nodos$Volumen<-as.numeric(nodos$Volumen)/1000
# Creo la red con la función graph_from_data_frame
red_aguilas <- graph_from_data_frame(enlaces, directed=TRUE, vertices=nodos)
print(red_aguilas, e=TRUE, v=TRUE)
E(red_aguilas)
V(red_aguilas)
# Creo la red con la función graph_from_data_frame
red <- graph_from_data_frame(enlaces, directed=TRUE, vertices=nodos)
# vemos la estructura e= enlaces o edge, v= vertices o nodos
print(red, e=TRUE, v=TRUE)
# pinto la red
plot(red)
# Creo la red con la función graph_from_data_frame
red <- graph_from_data_frame(enlaces, directed=TRUE, vertices=nodos)
# pinto la red
plot(red)
# pinto la red
plot(red)
# Ajusto algunos parametros de la red
plot(red,vertex.label= nodos$punto_destino,
vertex.color="lightblue",
vertex.size=nodos$Volumen*2,
edge.arrow.size=1,edge.color="darkblue",
edge.curved=.1,
edge.width=nodos$Volumen*3)
par(mfrow=c(1,1), mar=c(0,0,1,0))
# Ajusto algunos parametros de la red
plot(red,vertex.label= nodos$punto_destino,
vertex.color="lightblue",
vertex.size=nodos$Volumen*2,
edge.arrow.size=1,edge.color="darkblue",
edge.curved=.1,
edge.width=nodos$Volumen*3)
# tabla de nodos
nodos<-data.frame(stringsAsFactors=FALSE,
to = c(15, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 16),
punto_destino = c("Captacion planta", "Aguilas planta", "Aguilas Salinares",
"Aguilas Fuente del Pobre", "Aguilas toma nueva",
"Pulpi 1", "Pulpi bombeo", "Pulpi Toma vagon", "MCT",
"Pto Lumbreras", "Totana", "Lorca", "Cerro Colorado", "2escalon",
"Producto planta", "Mar"),
Volumen = c("12155.437", "64.585", "682.884", "442.198", "307.868",
"125.661", "453.680", "384.699", "0.000", "685.458", "272.581",
"1942.262", "2900.301", "4614.407", "5361.876", "6793.561"),
Grupo = c("PLANTA", "C.RR.A", "C.RR.A", "C.RR.A", "C.RR.A",
"C.RR.P", "C.RR.P", "C.RR.P", "Ayuntamiento", "C.RR.T",
"C.RR.T", "C.RR.L", "PLANTA", "PLANTA", "PLANTA", "PLANTA"))
# tabla de nodos
nodos<-data.frame(stringsAsFactors=FALSE,
to = c(15, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 16),
punto_destino = c("Captacion planta", "C.RR.A naranjos", "Balsa C.RR.A",
"Fuente Pobre", "Toma nueva C.RR.A",
"C.RR.P 1", "C.RR.P bombeo", "C.RR.P 2", "Ayuntamiento",
"C.RR.T", "C.RR.T 2", "C.RR.L", "Embalse", "Bombeo",
"Producto planta", "Mar"),
Volumen = c("12155.437", "64.585", "682.884", "442.198", "307.868",
"125.661", "453.680", "384.699", "0.000", "685.458", "272.581",
"1942.262", "2900.301", "4614.407", "5361.876", "6793.561"),
Grupo = c("PLANTA", "C.RR.A", "C.RR.A", "C.RR.A", "C.RR.A",
"C.RR.P", "C.RR.P", "C.RR.P", "Ayuntamiento", "C.RR.T",
"C.RR.T", "C.RR.L", "PLANTA", "PLANTA", "PLANTA", "PLANTA"))
# convierto en hm3 la variable de volumen
nodos$Volumen<-as.numeric(nodos$Volumen)/1000
# Creo la red con la función graph_from_data_frame
red <- graph_from_data_frame(enlaces, directed=TRUE, vertices=nodos)
# vemos la estructura e= enlaces o edge, v= vertices o nodos
print(red, e=TRUE, v=TRUE)
# tambien podemos ver los enlaces o edge
E(red)
# y los nodos o V
V(red)
# pinto la red
plot(red)
par(mfrow=c(1,1), mar=c(0,0,1,0))
# Ajusto algunos parametros de la red
plot(red,vertex.label= nodos$punto_destino,
vertex.color="lightblue",
vertex.size=nodos$Volumen*2,
edge.arrow.size=1,edge.color="darkblue",
edge.curved=.1,
edge.width=nodos$Volumen*3)
# creamos unos colores
#library("RColorBrewer")
#pal3 <- brewer.pal(10, "Set3")
#colrs <- rev(pal3)
# Reamos colores personalizados
colrs <- c("gray50", "tomato", "gold", "orange", "green","blue","lightblue")
# creamos una variable con los colores en los vertices
V(red_aguilas)$color<-colrs[as.factor(nodos$Grupo)]
# creamos una variable con los colores en los vertices
V(red)$color<-colrs[as.factor(nodos$Grupo)]
#V(red_aguilas)$label<-"" #Paste0(punto_destino$nombre,"f")
# tambien creamos otra variable para eltamñano del nodo que dependa del volumen
V(red)$size <- nodos$Volumen
# para conservar la forma, se puede dar un formato específico con  layout_with... y varias opciones
l <- layout_with_fr(red)
plot(red,layout=l,main="Distribución mes de feb 2019",
vertex.label= paste(nodos$punto_destino,"\n",signif(nodos$Volumen,digits=2),"Hm3"),
vertex.label.cex=.7,
vertex.label.color="black",
vertex.color= V(red)$color,
vertex.size=nodos$Volumen*2,
edge.color=V(red)$color,
edge.curved=.1,
edge.width=nodos$Volumen*2
)
# creamos unos colores
#library("RColorBrewer")
#pal3 <- brewer.pal(10, "Set3")
#colrs <- rev(pal3)
# Reamos colores personalizados
colrs <- c("gray50", "tomato", "gold", "orange", "green","lightblue")
# creamos una variable con los colores en los vertices
V(red)$color<-colrs[as.factor(nodos$Grupo)]
#V(red_aguilas)$label<-"" #Paste0(punto_destino$nombre,"f")
# tambien creamos otra variable para eltamñano del nodo que dependa del volumen
V(red)$size <- nodos$Volumen
# para conservar la forma, se puede dar un formato específico con  layout_with... y varias opciones
l <- layout_with_fr(red)
plot(red,layout=l,main="Distribución mes de feb 2019",
vertex.label= paste(nodos$punto_destino,"\n",signif(nodos$Volumen,digits=2),"Hm3"),
vertex.label.cex=.7,
vertex.label.color="black",
vertex.color= V(red)$color,
vertex.size=nodos$Volumen*2,
edge.color=V(red)$color,
edge.curved=.1,
edge.width=nodos$Volumen*2
)
plot(red,layout=l,main="Distribución agua en la red - feb 2019",
vertex.label= paste(nodos$punto_destino,"\n",signif(nodos$Volumen,digits=2),"Hm3"),
vertex.label.cex=.7,
vertex.label.color="black",
vertex.color= V(red)$color,
vertex.size=nodos$Volumen*2,
edge.color=V(red)$color,
edge.curved=.1,
edge.width=nodos$Volumen*2
)
legend(x=0, y=1.1,c("Planta","C.RR", "MCT"), pch=21,
col="#777777", pt.bg=colrs, pt.cex=2, cex=.8, bty="n", ncol=1)
V(red)$color
legend(x=0, y=1.1,c("Planta","C.RR", "MCT","C.RR1"), pch=21,
col="#777777", pt.bg=colrs, pt.cex=2, cex=.8, bty="n", ncol=1)
legend(x=0, y=1.1,c("Planta","C.RR", "MCT","C.RR1","crr5"), pch=21,
col="#777777", pt.bg=colrs, pt.cex=2, cex=.8, bty="n", ncol=1)
plot(red,layout=l,main="Distribución agua en la red - feb 2019",
vertex.label= paste(nodos$punto_destino,"\n",signif(nodos$Volumen,digits=2),"Hm3"),
vertex.label.cex=.7,
vertex.label.color=V(red)$color,#"black",
vertex.color= V(red)$color,
vertex.size=nodos$Volumen*2,
edge.color=V(red)$color,
edge.curved=.1,
edge.width=nodos$Volumen*2
)
legend(x=0, y=1.1,c("Ayuntamiento","C.RR", "MCT","C.RR1","crr5"), pch=21,
col="#777777", pt.bg=colrs, pt.cex=2, cex=.8, bty="n", ncol=1)
legend(x=-1, y=1.1,c("Ayuntamiento","C.RR", "MCT","C.RR1","crr5"), pch=21,
col="#777777", pt.bg=colrs, pt.cex=2, cex=.8, bty="n", ncol=1)
legend(x=-1, y=1.1,c("Ayuntamiento","C.RR", "MCT","C.RR1","crr5","Planta"), pch=21,
col="#777777", pt.bg=colrs, pt.cex=2, cex=.8, bty="n", ncol=1)
as.factor(nodos$Grupo)
levels(V(red)$color)
levels(as.factor(nodos$Grupo)
levels(as.factor(nodos$Grupo))
Levels(as.factor(nodos$Grupo))
as.factor(nodos$Grupo)
levels(as.factor(nodos$Grupo))
legend(x=-1, y=1.1,levels(as.factor(nodos$Grupo)), pch=21,
col="#777777", pt.bg=colrs, pt.cex=2, cex=.8, bty="n", ncol=1)
plot(red,layout=l,main="Distribución agua en la red - feb 2019",
vertex.label= paste(nodos$punto_destino,"\n",signif(nodos$Volumen,digits=2),"Hm3"),
vertex.label.cex=.7,
vertex.label.color=V(red)$color,#"black",
vertex.color= V(red)$color,
vertex.size=nodos$Volumen*2,
edge.color=V(red)$color,
edge.curved=.1,
edge.width=nodos$Volumen*2
)
legend(x=-1, y=1.1,levels(as.factor(nodos$Grupo)), pch=21,
col="#777777", pt.bg=colrs, pt.cex=2, cex=.8, bty="n", ncol=1)
plot(red,layout=l,main="Distribución agua en la red - feb 2019",
vertex.label= paste(nodos$punto_destino,"\n",signif(nodos$Volumen,digits=2),"Hm3"),
vertex.label.cex=.7,
vertex.label.color="black", # V(red)$color,
vertex.color= V(red)$color,
vertex.size=nodos$Volumen*2,
edge.color=V(red)$color,
edge.curved=.1,
edge.width=nodos$Volumen*2
)
# añadimos la leyenda
legend(x=-1, y=1.1,levels(as.factor(nodos$Grupo)), pch=21,
col="#777777", pt.bg=colrs, pt.cex=2, cex=.8, bty="n", ncol=1)
# anañimos el resultado anterior como nueva variable de los vertices
V(red)$grup1 <- clp$membership
colorescluster <- adjustcolor( c("blue", "tomato", "gold"), alpha=.6)
plot(red,
vertex.size=5,
vertex.color=colorescluster[V(red)$grup1],
vertex.label.cex=0.5,
vertex.label= paste(nodos$punto_destino,"\n",signif(nodos$Volumen,digits=2),"Hm3")
)
plot(red,
vertex.size=15,
vertex.color=colorescluster[V(red)$grup1],
vertex.label.cex=0.5,
vertex.label= paste(nodos$punto_destino,"\n",signif(nodos$Volumen,digits=2),"Hm3")
)
nodos$Volumen
# anañimos el resultado anterior como nueva variable de los vertices
V(red)$grup1 <- clp$membership
colorescluster <- adjustcolor( c("blue", "tomato", "gold"), alpha=.6)
plot(red,
vertex.size=15,
vertex.color=colorescluster[V(red)$grup1],
vertex.label.cex=0.5,
vertex.label= paste(nodos$punto_destino,"\n",signif(nodos$Volumen,digits=2),"Hm3")
)
V(red)$grup1
# creamos un cluster optimo de los datos automático
clp <- cluster_optimal(red)
# anañimos el resultado anterior como nueva variable de los vertices
V(red)$grup1 <- clp$membership
colorescluster <- adjustcolor( c("blue", "tomato", "gold"), alpha=.6)
plot(red,
vertex.size=15,
vertex.color=colorescluster[V(red)$grup1],
vertex.label.cex=0.5,
vertex.label= paste(nodos$punto_destino,"\n",signif(nodos$Volumen,digits=2),"Hm3")
)
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
