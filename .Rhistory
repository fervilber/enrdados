blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::update_meta_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::update_meta_addin()
blogdown:::update_meta_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages("yaml")
install.packages("yaml")
install.packages("yaml")
blogdown:::serve_site()
require(devtools)
install_version("yaml", repos = "http://cran.us.r-project.org")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::update_meta_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
# generamos unas series para pintar despues
library(astsa) # para generar la serie aleatoria
library(ggplot2)
library(cowplot)
library(patchwork) # la librería que estamos viendo
# Genero serie aleatoria de 500
ar <- arima.sim(model=list(order=c(1,1,0),ar= 0.8), n=500)
# le añado fecha y convierto en serie temporal
mi_ts<-ts(AR, start = c(1990,3), frequency = 12)
# generamos unas series para pintar despues
library(astsa) # para generar la serie aleatoria
library(ggplot2)
library(cowplot)
library(patchwork) # la librería que estamos viendo
# Genero serie aleatoria de 500
ar <- arima.sim(model=list(order=c(1,1,0),ar= 0.8), n=500)
# le añado fecha y convierto en serie temporal
mi_ts<-ts(ar, start = c(1990,3), frequency = 12)
# convierto la serie en data.frame
xy<-data.frame(x=time(mi_ts),y=mi_ts)
xy$year<-round(xy$x)
# dibujo la serie temporal como linea
p1<-ggplot(xy, aes(x=x, y=y))+
geom_line(color = "#00AFBB", size = 1) +
labs(title="Gráfica de tiempo") +
labs(y = 'Valor', x= "Fecha") +
theme_cowplot(8) # formato que me gusta y letra 8
# dibujo el histograma de la serie
p2<-ggplot(xy, aes(y))+
geom_histogram(bins=10, aes(fill=..count..))+
labs(title='Frecuencia de datos temporales')+
labs(y = 'Frecuencia') +
geom_rug()+ # añado lineas negras abajo
theme_cowplot(8) # formato
#p3<-ggplot(xy, aes(y))+ geom_freqpoly(binwidth = 5, size=2) + theme_cowplot(8)
# dibujo gráfica q-q de la serie
p3<-ggplot(xy, aes(sample=y)) +
stat_qq()+
stat_qq_line()+ # añado linea 45º
theme_cowplot(8)
# Creamos gráficos con patchwork
# 1. en pila una debajo de otra
p1 / p2
# 2. Una junto a otra
p1 + p2 + p3
# 3. Una junto a otra
(p1 | p3) / p2
knitr::opts_chunk$set(error=FALSE,echo = TRUE, warning = FALSE, message = FALSE)
g_fer<-(p1 | p3) / p2
g_fer + plot_annotation(
title = 'Resumen de la serie temporal',
subtitle = 'Estas 3 gráficas nos muestran el comportamiento de la serie',
caption = 'Nota: @enRdados.net'
)&   theme(text = element_text('mono'))
g_fer + plot_annotation(tag_levels = 'A')
g_fer + plot_annotation(tag_levels = 'A',tag_prefix = 'Fig. ')+
theme(plot.tag = element_text(size = 12))
# añadimos una tabla
library(gridExtra)
# añado una columna nueva a la data.frame
xy$y1<-round(xy$y)
# pintamos la gráfica y una tabla
p1 + gridExtra::tableGrob(xy[1:10, c('year', 'y1')]) +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 12))
# insertar otras gráficas
(p1) + (~hist(mi_ts))
(p1) / ~plot(mi_ts)
p1 / ~plot(mi_ts)
# 3. Una junto a otra
(p1 | p3) / p2
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::serve_site()
